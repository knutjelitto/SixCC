CXStart
    CCodeUnit
        CNamespace
            CAnnotations
                ROptional<ICStringLiteral>
                RStar<CAnnotation>
            RLiteral{'namespace'}
            CNamespacePath
                CIdentifier{'six'}
                CIdentifier{'core'}
            RLiteral{';'}
        CImports
        CTopDeclarations
            CClassDeclaration
                CAnnotations
                    ROptional<ICStringLiteral>
                        CVerbatimString{'\"\"\"\r\nThe default superclass when no superclass is explicitly specified using `extends`. For the sake of convenience, this\r\nclass inherits [[Identifiable]] along with its [[default definition|Identifiable.equals]] of value equality. Classes\r\nwhich aren\'t `Identifiable` should directly extend [[Object]].\r\n\"\"\"'}
                    RStar<CAnnotation>
                        CAnnotation
                            CLowerIdentifier{'by'}
                            ROptional<ICArguments>
                                CPositionalArguments
                                    RLiteral{'('}
                                    ROptional<CSequencedArgumentList>
                                        CSequencedArgumentList
                                            CLiteralString{'\"Gavin\"'}
                                    RLiteral{')'}
                        CAnnotation
                            CLowerIdentifier{'tagged'}
                            ROptional<ICArguments>
                                CPositionalArguments
                                    RLiteral{'('}
                                    ROptional<CSequencedArgumentList>
                                        CSequencedArgumentList
                                            CLiteralString{'\"Basic types\"'}
                                    RLiteral{')'}
                        CAnnotation
                            CLowerIdentifier{'shared'}
                            ROptional<ICArguments>
                        CAnnotation
                            CLowerIdentifier{'abstract'}
                            ROptional<ICArguments>
                RLiteral{'class'}
                CUpperIdentifier{'Basic'}
                ROptional<CTypeParameters>
                ROptional<CParameters>
                    CParameters
                        RLiteral{'('}
                        ROptional<CParameterList>
                        RLiteral{')'}
                ROptional<CCaseTypes>
                ROptional<CExtendedType>
                    CExtendedType
                        RLiteral{'extends'}
                        CClassInstantiation
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Object'}
                                    ROptional<CTypeArguments>
                            ROptional<ICArguments>
                                CPositionalArguments
                                    RLiteral{'('}
                                    ROptional<CSequencedArgumentList>
                                    RLiteral{')'}
                ROptional<CSatisfiedTypes>
                    CSatisfiedTypes
                        RLiteral{'satisfies'}
                        CUnionTypeList
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Identifiable'}
                                    ROptional<CTypeArguments>
                ROptional<CTypeConstraints>
                CBlock
                    RLiteral{'{'}
                    CImports
                    CStatements
                    RLiteral{'}'}
    REof{''}
