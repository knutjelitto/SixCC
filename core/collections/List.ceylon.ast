Top : Unit
    Namespace : Namespace
        Annotations : Annotations
        Names : Identifiers[#2]
            [0] : Any = 'six'
            [1] : Any = 'core'
    Declarations : Declarations[#1]
        [0] : Interface
            Annotations : Annotations
                Doc : VerbatimString = 'A collection in which every element has a unique \r\n   non-negative integer index. The elements of a '…
                Items : AnnotationList[#3]
                    [0] : Annotation
                        Name : Lower = 'see'
                        Arguments : Positional
                            Sequenced : ArgumentList[#3]
                                [0] : Interface
                                    Path : ReferencePath
                                        Package = False
                                        Names : Identifiers[#1]
                                            [0] : Any = 'Sequence'
                                [1] : Interface
                                    Path : ReferencePath
                                        Package = False
                                        Names : Identifiers[#1]
                                            [0] : Any = 'Empty'
                                [2] : Class
                                    Path : ReferencePath
                                        Package = False
                                        Names : Identifiers[#1]
                                            [0] : Any = 'Array'
                    [1] : Annotation
                        Name : Lower = 'tagged'
                        Arguments : Positional
                            Sequenced : ArgumentList[#1]
                                [0] : StandardString = 'Collections'
                    [2] : Annotation
                        Name : Lower = 'shared'
            Name : Upper = 'List'
            Location = List.ceylon(65,18)
            TypeParameters : TypeParameters[#1]
                [0] : TypeParameter
                    Variance = out
                    Name : Upper = 'Element'
                    Default : TypePath[#1]
                        [0] : TypeReference
                            Name : Upper = 'Anything'
            Satisfies : Satisfies
                Types : TypeList[#1]
                    [0] : Intersection
                        Op = &
                        Left : Intersection
                            Op = &
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Collection'
                                    Arguments : TypeArgumentList[#1]
                                        [0] : Varianced
                                            Type : TypePath[#1]
                                                [0] : TypeReference
                                                    Name : Upper = 'Element'
                            Right : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Correspondence'
                                    Arguments : TypeArgumentList[#2]
                                        [0] : Varianced
                                            Type : TypePath[#1]
                                                [0] : TypeReference
                                                    Name : Upper = 'Integer'
                                        [1] : Varianced
                                            Type : TypePath[#1]
                                                [0] : TypeReference
                                                    Name : Upper = 'Element'
                        Right : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Ranged'
                                Arguments : TypeArgumentList[#3]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                                    [1] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                                    [2] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'List'
                                                Arguments : TypeArgumentList[#1]
                                                    [0] : Varianced
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Element'
            Definition : Block
                statements : StatementList[#48]
                    [0] : TypedAttribute
                        Annotations : Annotations
                            Doc : StandardString = 'The first element of this `List`, if any.'
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'first'
                        Location = List.ceylon(71,36)
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : MemberReference
                                    Name : Lower = 'getFromFirst'
                                Arguments : Positional
                                    Sequenced : ArgumentList[#1]
                                        [0] : NaturalNumber
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
                    [1] : TypedAttribute
                        Annotations : Annotations
                            Doc : StandardString = 'The last element of this `List`, if any.'
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'last'
                        Location = List.ceylon(74,36)
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : MemberReference
                                    Name : Lower = 'getFromLast'
                                Arguments : Positional
                                    Sequenced : ArgumentList[#1]
                                        [0] : NaturalNumber
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
                    [2] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Returns the element of this list with the given [[index]] if the index refers to an element of\r\n    '…
                            Items : AnnotationList[#2]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                        Name : Lower = 'get'
                        Location = List.ceylon(79,28)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'index'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : MemberReference
                                    Name : Lower = 'getFromFirst'
                                Arguments : Positional
                                    Sequenced : ArgumentList[#1]
                                        [0] : MemberReference
                                            Name : Lower = 'index'
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
                    [3] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Returns the element of this list with the given [[index]] if the index refers to an element of\r\n    '…
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'getFromLast'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'actual'
                                [3] : Annotation
                                    Name : Lower = 'formal'
                        Name : Lower = 'getFromFirst'
                        Location = List.ceylon(86,35)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'index'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Null
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
                    [4] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Returns the element of this list with the given [[index]], where the list is indexed from the\r\n     '…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'getFromLast'
                        Location = List.ceylon(93,29)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'index'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : MemberReference
                                    Name : Lower = 'getFromFirst'
                                Arguments : Positional
                                    Sequenced : ArgumentList[#1]
                                        [0] : Infix
                                            Op = -
                                            Left : Infix
                                                Op = -
                                                Left : MemberReference
                                                    Name : Lower = 'size'
                                                Right : NaturalNumber
                                            Right : MemberReference
                                                Name : Lower = 'index'
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
                    [5] : TypedMethod
                        Annotations : Annotations
                        Name : Lower = 'getElement'
                        Location = List.ceylon(96,13)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'index'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Block
                            statements : StatementList[#1]
                                [0] : If
                                    Conditionals : Conditionals[#1]
                                        [0] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : Exists
                                                    not = False
                                                    expression : LetVariable
                                                        Pattern : Variable
                                                            Name : Lower = 'element'
                                                        Specifier : Value
                                                            Op = =
                                                            Expr : Call
                                                                Expr : MemberReference
                                                                    Name : Lower = 'getFromFirst'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#1]
                                                                        [0] : MemberReference
                                                                            Name : Lower = 'index'
                                            Block : Block
                                                statements : StatementList[#1]
                                                    [0] : Return
                                                        Expr : MemberReference
                                                            Name : Lower = 'element'
                                    ElseBlock : Block
                                        statements : StatementList[#2]
                                            [0] : Assertion
                                                Conditions : Conditions[#1]
                                                    [0] : Is
                                                        not = False
                                                        type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Element'
                                                        variable : ConditionVariable
                                                            Name : Lower = 'null'
                                            [1] : Return
                                                Expr : MemberReference
                                                    Name : Lower = 'null'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Element'
                    [6] : TypedAttribute
                        Annotations : Annotations
                            Doc : StandardString = 'The index of the last element of the list, or `null` if the list is empty. Always\r\n    `size>0 then '…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Value
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#2]
                                                        [0] : Any = 'List'
                                                        [1] : Any = 'size'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'formal'
                        Name : Lower = 'lastIndex'
                        Location = List.ceylon(112,28)
                        Definition : Null
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Integer'
                    [7] : TypedAttribute
                        Annotations : Annotations
                            Doc : StandardString = 'The number of elements in this list, always `1 + (lastIndex else -1)`.'
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Value
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#2]
                                                        [0] : Any = 'List'
                                                        [1] : Any = 'lastIndex'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'actual'
                                [3] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'size'
                        Location = List.ceylon(116,35)
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = +
                                Left : NaturalNumber
                                Right : Infix
                                    Op = else
                                    Left : MemberReference
                                        Name : Lower = 'lastIndex'
                                    Right : Prefix
                                        Op = -
                                        Right : NaturalNumber
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Integer'
                    [8] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Determines if the given index refers to an element of this list, that is, if\r\n     `0 <= index <= li'…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'defines'
                        Location = List.ceylon(121,35)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'index'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : SmallerBounds
                                Left : NaturalNumber
                                Op1 = <=
                                Mid : MemberReference
                                    Name : Lower = 'index'
                                Op2 = <
                                Right : MemberReference
                                    Name : Lower = 'size'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Boolean'
                    [9] : TypedAttribute
                        Annotations : Annotations
                            Doc : StandardString = 'The rest of the list, without the first element.\r\n     \r\n     This is a lazy operation returning a v'…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'rest'
                        Location = List.ceylon(127,41)
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = else
                                Left : Infix
                                    Op = then
                                    Left : Infix
                                        Op = >
                                        Left : MemberReference
                                            Name : Lower = 'size'
                                        Right : NaturalNumber
                                    Right : Call
                                        Expr : TypeReference
                                            Name : Upper = 'Sublist'
                                        Arguments : Positional
                                            Sequenced : ArgumentList[#2]
                                                [0] : NaturalNumber
                                                [1] : Infix
                                                    Op = -
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                Right : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [10] : TypedAttribute
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'exceptLast'
                        Location = List.ceylon(130,41)
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = else
                                Left : Infix
                                    Op = then
                                    Left : Infix
                                        Op = >
                                        Left : MemberReference
                                            Name : Lower = 'size'
                                        Right : NaturalNumber
                                    Right : Call
                                        Expr : TypeReference
                                            Name : Upper = 'Sublist'
                                        Arguments : Positional
                                            Sequenced : ArgumentList[#2]
                                                [0] : NaturalNumber
                                                [1] : Infix
                                                    Op = -
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                Right : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [11] : TypedAttribute
                        Annotations : Annotations
                            Doc : StandardString = 'A list containing all indexes of this list.\r\n     \r\n     This is a lazy operation returning a view o'…
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'indexes'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'actual'
                                [3] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'keys'
                        Location = List.ceylon(137,41)
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : TypeReference
                                    Name : Upper = 'Indexes'
                                Arguments : Positional
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                    [12] : TypedAttribute
                        Annotations : Annotations
                            Doc : StandardString = 'A list containing the elements of this list in reverse order to the order in which they occur\r\n     '…
                            Items : AnnotationList[#2]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'reversed'
                        Location = List.ceylon(145,34)
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : TypeReference
                                    Name : Upper = 'Reversed'
                                Arguments : Positional
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [13] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'A shallow copy of this list, that is, a list with the same elements as this list, which do not\r\n    '…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'clone'
                        Location = List.ceylon(149,41)
                        Parameters : ParametersList[#1]
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : MemberReference
                                    Name : Lower = 'sequence'
                                Arguments : Positional
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [14] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'iterator'
                        Location = List.ceylon(152,45)
                        Parameters : ParametersList[#1]
                        Definition : Block
                            statements : StatementList[#1]
                                [0] : If
                                    Conditionals : Conditionals[#1]
                                        [0] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : Infix
                                                    Op = >
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                            Block : Block
                                                statements : StatementList[#1]
                                                    [0] : Return
                                                        Expr : Object
                                                            Satisfied : Satisfies
                                                                Types : TypeList[#1]
                                                                    [0] : TypePath[#1]
                                                                        [0] : TypeReference
                                                                            Name : Upper = 'Iterator'
                                                                            Arguments : TypeArgumentList[#1]
                                                                                [0] : Varianced
                                                                                    Type : TypePath[#1]
                                                                                        [0] : TypeReference
                                                                                            Name : Upper = 'Element'
                                                            Block : Block
                                                                statements : StatementList[#4]
                                                                    [0] : TypedAttribute
                                                                        Annotations : Annotations
                                                                            Items : AnnotationList[#1]
                                                                                [0] : Annotation
                                                                                    Name : Lower = 'variable'
                                                                        Name : Lower = 'index'
                                                                        Location = List.ceylon(158,34)
                                                                        Definition : Value
                                                                            Op = =
                                                                            Expr : NaturalNumber
                                                                        Type : TypePath[#1]
                                                                            [0] : TypeReference
                                                                                Name : Upper = 'Integer'
                                                                    [1] : InferredAttribute
                                                                        Annotations : Annotations
                                                                        Name : Lower = 'size'
                                                                        Location = List.ceylon(159,23)
                                                                        Definition : Value
                                                                            Op = =
                                                                            Expr : Infix
                                                                                Op = .
                                                                                Left : SelfReference
                                                                                    Reference = outer
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'size'
                                                                    [2] : Specification
                                                                        Primary : Call
                                                                            Expr : MemberReference
                                                                                Name : Lower = 'next'
                                                                            Arguments : Positional
                                                                        Value : Function
                                                                            Op = =>
                                                                            Expr : Infix
                                                                                Op = else
                                                                                Left : Infix
                                                                                    Op = then
                                                                                    Left : Infix
                                                                                        Op = >=
                                                                                        Left : MemberReference
                                                                                            Name : Lower = 'index'
                                                                                        Right : MemberReference
                                                                                            Name : Lower = 'size'
                                                                                    Right : MemberReference
                                                                                        Name : Lower = 'finished'
                                                                                Right : Call
                                                                                    Expr : MemberReference
                                                                                        Name : Lower = 'getElement'
                                                                                    Arguments : Positional
                                                                                        Sequenced : ArgumentList[#1]
                                                                                            [0] : PostfixIncDec
                                                                                                Left : MemberReference
                                                                                                    Name : Lower = 'index'
                                                                                                Op = ++
                                                                    [3] : Specification
                                                                        Primary : MemberReference
                                                                            Name : Lower = 'string'
                                                                        Value : Function
                                                                            Op = =>
                                                                            Expr : Infix
                                                                                Op = +
                                                                                Left : Infix
                                                                                    Op = .
                                                                                    Left : SelfReference
                                                                                        Reference = outer
                                                                                    Right : MemberReference
                                                                                        Name : Lower = 'string'
                                                                                Right : StandardString = '.iterator()'
                                    ElseBlock : Block
                                        statements : StatementList[#1]
                                            [0] : Return
                                                Expr : MemberReference
                                                    Name : Lower = 'emptyIterator'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Iterator'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [15] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Two `List`s are considered equal iff they have the same `size` and _entry sets_. The entry set\r\n    '…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'equals'
                        Location = List.ceylon(181,35)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'that'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Object'
                        Definition : Block
                            statements : StatementList[#1]
                                [0] : If
                                    Conditionals : Conditionals[#2]
                                        [0] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : Is
                                                    not = False
                                                    type : TypePath[#1]
                                                        [0] : TypeReference
                                                            Name : Upper = 'String'
                                                    variable : ConditionVariable
                                                        Name : Lower = 'that'
                                            Block : Block
                                                statements : StatementList[#1]
                                                    [0] : Return
                                                        Expr : MemberReference
                                                            Name : Lower = 'false'
                                        [1] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : Is
                                                    not = False
                                                    type : TypePath[#1]
                                                        [0] : TypeReference
                                                            Name : Upper = 'List'
                                                    variable : ConditionVariable
                                                        Name : Lower = 'that'
                                            Block : Block
                                                statements : StatementList[#4]
                                                    [0] : If
                                                        Conditionals : Conditionals[#1]
                                                            [0] : ConditionalBlock
                                                                Conditions : Conditions[#1]
                                                                    [0] : Infix
                                                                        Op = !=
                                                                        Left : Infix
                                                                            Op = .
                                                                            Left : SelfReference
                                                                                Reference = this
                                                                            Right : MemberReference
                                                                                Name : Lower = 'size'
                                                                        Right : Infix
                                                                            Op = .
                                                                            Left : MemberReference
                                                                                Name : Lower = 'that'
                                                                            Right : MemberReference
                                                                                Name : Lower = 'size'
                                                                Block : Block
                                                                    statements : StatementList[#1]
                                                                        [0] : Return
                                                                            Expr : MemberReference
                                                                                Name : Lower = 'false'
                                                    [1] : InferredAttribute
                                                        Annotations : Annotations
                                                        Name : Lower = 'thisIterator'
                                                        Location = List.ceylon(193,19)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : Call
                                                                Expr : Infix
                                                                    Op = .
                                                                    Left : SelfReference
                                                                        Reference = this
                                                                    Right : MemberReference
                                                                        Name : Lower = 'iterator'
                                                                Arguments : Positional
                                                    [2] : InferredAttribute
                                                        Annotations : Annotations
                                                        Name : Lower = 'thatIterator'
                                                        Location = List.ceylon(194,19)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : Call
                                                                Expr : Infix
                                                                    Op = .
                                                                    Left : MemberReference
                                                                        Name : Lower = 'that'
                                                                    Right : MemberReference
                                                                        Name : Lower = 'iterator'
                                                                Arguments : Positional
                                                    [3] : For
                                                        Iterator : ForIterator
                                                            Variable : Variable
                                                                Name : Lower = '_'
                                                            Containment : Containment
                                                                Op = in
                                                                Expr : Infix
                                                                    Op = :
                                                                    Left : NaturalNumber
                                                                    Right : MemberReference
                                                                        Name : Lower = 'size'
                                                        Block : Block
                                                            statements : StatementList[#3]
                                                                [0] : InferredAttribute
                                                                    Annotations : Annotations
                                                                    Name : Lower = 'thisElement'
                                                                    Location = List.ceylon(197,23)
                                                                    Definition : Value
                                                                        Op = =
                                                                        Expr : Call
                                                                            Expr : Infix
                                                                                Op = .
                                                                                Left : MemberReference
                                                                                    Name : Lower = 'thisIterator'
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'next'
                                                                            Arguments : Positional
                                                                [1] : InferredAttribute
                                                                    Annotations : Annotations
                                                                    Name : Lower = 'thatElement'
                                                                    Location = List.ceylon(198,23)
                                                                    Definition : Value
                                                                        Op = =
                                                                        Expr : Call
                                                                            Expr : Infix
                                                                                Op = .
                                                                                Left : MemberReference
                                                                                    Name : Lower = 'thatIterator'
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'next'
                                                                            Arguments : Positional
                                                                [2] : If
                                                                    Conditionals : Conditionals[#2]
                                                                        [0] : ConditionalBlock
                                                                            Conditions : Conditions[#1]
                                                                                [0] : Exists
                                                                                    not = False
                                                                                    expression : MemberReference
                                                                                        Name : Lower = 'thisElement'
                                                                            Block : Block
                                                                                statements : StatementList[#1]
                                                                                    [0] : If
                                                                                        Conditionals : Conditionals[#2]
                                                                                            [0] : ConditionalBlock
                                                                                                Conditions : Conditions[#1]
                                                                                                    [0] : Exists
                                                                                                        not = True
                                                                                                        expression : MemberReference
                                                                                                            Name : Lower = 'thatElement'
                                                                                                Block : Block
                                                                                                    statements : StatementList[#1]
                                                                                                        [0] : Return
                                                                                                            Expr : MemberReference
                                                                                                                Name : Lower = 'false'
                                                                                            [1] : ConditionalBlock
                                                                                                Conditions : Conditions[#1]
                                                                                                    [0] : Infix
                                                                                                        Op = !=
                                                                                                        Left : MemberReference
                                                                                                            Name : Lower = 'thisElement'
                                                                                                        Right : MemberReference
                                                                                                            Name : Lower = 'thatElement'
                                                                                                Block : Block
                                                                                                    statements : StatementList[#1]
                                                                                                        [0] : Return
                                                                                                            Expr : MemberReference
                                                                                                                Name : Lower = 'false'
                                                                        [1] : ConditionalBlock
                                                                            Conditions : Conditions[#1]
                                                                                [0] : Exists
                                                                                    Expr : MemberReference
                                                                                        Name : Lower = 'thatElement'
                                                                            Block : Block
                                                                                statements : StatementList[#1]
                                                                                    [0] : Return
                                                                                        Expr : MemberReference
                                                                                            Name : Lower = 'false'
                                                        ElseBlock : Block
                                                            statements : StatementList[#1]
                                                                [0] : Return
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'true'
                                    ElseBlock : Block
                                        statements : StatementList[#1]
                                            [0] : Return
                                                Expr : MemberReference
                                                    Name : Lower = 'false'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Boolean'
                    [16] : TypedAttribute
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'hash'
                        Location = List.ceylon(226,35)
                        Definition : Block
                            statements : StatementList[#3]
                                [0] : InferredAttribute
                                    Annotations : Annotations
                                        Items : AnnotationList[#1]
                                            [0] : Annotation
                                                Name : Lower = 'variable'
                                    Name : Lower = 'hash'
                                    Location = List.ceylon(228,24)
                                    Definition : Value
                                        Op = =
                                        Expr : NaturalNumber
                                [1] : For
                                    Iterator : ForIterator
                                        Variable : Variable
                                            Name : Lower = 'elem'
                                        Containment : Containment
                                            Op = in
                                            Expr : SelfReference
                                                Reference = this
                                    Block : Block
                                        statements : StatementList[#2]
                                            [0] : Expression
                                                Expr : Infix
                                                    Op = *=
                                                    Left : MemberReference
                                                        Name : Lower = 'hash'
                                                    Right : NaturalNumber
                                            [1] : If
                                                Conditionals : Conditionals[#1]
                                                    [0] : ConditionalBlock
                                                        Conditions : Conditions[#1]
                                                            [0] : Exists
                                                                not = False
                                                                expression : MemberReference
                                                                    Name : Lower = 'elem'
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : Expression
                                                                    Expr : Infix
                                                                        Op = +=
                                                                        Left : MemberReference
                                                                            Name : Lower = 'hash'
                                                                        Right : Infix
                                                                            Op = .
                                                                            Left : MemberReference
                                                                                Name : Lower = 'elem'
                                                                            Right : MemberReference
                                                                                Name : Lower = 'hash'
                                [2] : Return
                                    Expr : MemberReference
                                        Name : Lower = 'hash'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Integer'
                    [17] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'shorterThan'
                        Location = List.ceylon(241,13)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'length'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = <
                                Left : MemberReference
                                    Name : Lower = 'size'
                                Right : MemberReference
                                    Name : Lower = 'length'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Boolean'
                    [18] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'longerThan'
                        Location = List.ceylon(244,13)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'length'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = >
                                Left : MemberReference
                                    Name : Lower = 'size'
                                Right : MemberReference
                                    Name : Lower = 'length'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Boolean'
                    [19] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'A list containing the elements of this list repeated the [[given number of times|times]], or\r\n     a'…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'repeat'
                        Location = List.ceylon(253,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'times'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Switch
                                Head : Infix
                                    Op = <=>
                                    Left : MemberReference
                                        Name : Lower = 'times'
                                    Right : NaturalNumber
                                Cases : CaseList[#3]
                                    [0] : Case
                                        Item : CaseItemList[#1]
                                            [0] : MemberReference
                                                Name : Lower = 'smaller'
                                        Expr : Tuple
                                    [1] : Case
                                        Item : CaseItemList[#1]
                                            [0] : MemberReference
                                                Name : Lower = 'equal'
                                        Expr : SelfReference
                                            Reference = this
                                    [2] : Case
                                        Item : CaseItemList[#1]
                                            [0] : MemberReference
                                                Name : Lower = 'larger'
                                        Expr : Call
                                            Expr : TypeReference
                                                Name : Upper = 'Repeat'
                                            Arguments : Positional
                                                Sequenced : ArgumentList[#1]
                                                    [0] : MemberReference
                                                        Name : Lower = 'times'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [20] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'default'
                                [2] : Annotation
                                    Name : Lower = 'actual'
                        Name : Lower = 'find'
                        Location = List.ceylon(260,14)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedFunction
                                        Name : Lower = 'selecting'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'elem'
                                                        Type : Intersection
                                                            Op = &
                                                            Left : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Element'
                                                            Right : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Object'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Boolean'
                        Definition : Block
                            statements : StatementList[#3]
                                [0] : InferredAttribute
                                    Annotations : Annotations
                                        Items : AnnotationList[#1]
                                            [0] : Annotation
                                                Name : Lower = 'variable'
                                    Name : Lower = 'index'
                                    Location = List.ceylon(262,24)
                                    Definition : Value
                                        Op = =
                                        Expr : NaturalNumber
                                [1] : While
                                    Conditions : Conditions[#1]
                                        [0] : Infix
                                            Op = <
                                            Left : MemberReference
                                                Name : Lower = 'index'
                                            Right : MemberReference
                                                Name : Lower = 'size'
                                    Block : Block
                                        statements : StatementList[#1]
                                            [0] : If
                                                Conditionals : Conditionals[#1]
                                                    [0] : ConditionalBlock
                                                        Conditions : Conditions[#1]
                                                            [0] : Exists
                                                                not = False
                                                                expression : LetVariable
                                                                    Pattern : Variable
                                                                        Name : Lower = 'elem'
                                                                    Specifier : Value
                                                                        Op = =
                                                                        Expr : Call
                                                                            Expr : MemberReference
                                                                                Name : Lower = 'getFromFirst'
                                                                            Arguments : Positional
                                                                                Sequenced : ArgumentList[#1]
                                                                                    [0] : PostfixIncDec
                                                                                        Left : MemberReference
                                                                                            Name : Lower = 'index'
                                                                                        Op = ++
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : If
                                                                    Conditionals : Conditionals[#1]
                                                                        [0] : ConditionalBlock
                                                                            Conditions : Conditions[#1]
                                                                                [0] : Call
                                                                                    Expr : MemberReference
                                                                                        Name : Lower = 'selecting'
                                                                                    Arguments : Positional
                                                                                        Sequenced : ArgumentList[#1]
                                                                                            [0] : MemberReference
                                                                                                Name : Lower = 'elem'
                                                                            Block : Block
                                                                                statements : StatementList[#1]
                                                                                    [0] : Return
                                                                                        Expr : MemberReference
                                                                                            Name : Lower = 'elem'
                                [2] : Return
                                    Expr : MemberReference
                                        Name : Lower = 'null'
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
                    [21] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'default'
                                [2] : Annotation
                                    Name : Lower = 'actual'
                        Name : Lower = 'findLast'
                        Location = List.ceylon(277,14)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedFunction
                                        Name : Lower = 'selecting'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'elem'
                                                        Type : Intersection
                                                            Op = &
                                                            Left : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Element'
                                                            Right : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Object'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Boolean'
                        Definition : Block
                            statements : StatementList[#3]
                                [0] : InferredAttribute
                                    Annotations : Annotations
                                        Items : AnnotationList[#1]
                                            [0] : Annotation
                                                Name : Lower = 'variable'
                                    Name : Lower = 'index'
                                    Location = List.ceylon(279,24)
                                    Definition : Value
                                        Op = =
                                        Expr : Infix
                                            Op = -
                                            Left : MemberReference
                                                Name : Lower = 'size'
                                            Right : NaturalNumber
                                [1] : While
                                    Conditions : Conditions[#1]
                                        [0] : Infix
                                            Op = >=
                                            Left : MemberReference
                                                Name : Lower = 'index'
                                            Right : NaturalNumber
                                    Block : Block
                                        statements : StatementList[#1]
                                            [0] : If
                                                Conditionals : Conditionals[#1]
                                                    [0] : ConditionalBlock
                                                        Conditions : Conditions[#2]
                                                            [0] : Exists
                                                                not = False
                                                                expression : LetVariable
                                                                    Pattern : Variable
                                                                        Name : Lower = 'elem'
                                                                    Specifier : Value
                                                                        Op = =
                                                                        Expr : Call
                                                                            Expr : MemberReference
                                                                                Name : Lower = 'getFromFirst'
                                                                            Arguments : Positional
                                                                                Sequenced : ArgumentList[#1]
                                                                                    [0] : PostfixIncDec
                                                                                        Left : MemberReference
                                                                                            Name : Lower = 'index'
                                                                                        Op = --
                                                            [1] : Call
                                                                Expr : MemberReference
                                                                    Name : Lower = 'selecting'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#1]
                                                                        [0] : MemberReference
                                                                            Name : Lower = 'elem'
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : Return
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'elem'
                                [2] : Return
                                    Expr : MemberReference
                                        Name : Lower = 'null'
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
                    [22] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'A sublist of this list, starting at the element with the given [[index|from]].\r\n     \r\n     This is '…
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#2]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'skip'
                                            [1] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'sublistTo'
                                [1] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [2] : Annotation
                                    Name : Lower = 'shared'
                                [3] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'sublistFrom'
                        Location = List.ceylon(296,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'from'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : MemberReference
                                    Name : Lower = 'sublist'
                                Arguments : Positional
                                    Sequenced : ArgumentList[#2]
                                        [0] : MemberReference
                                            Name : Lower = 'from'
                                        [1] : Infix
                                            Op = -
                                            Left : MemberReference
                                                Name : Lower = 'size'
                                            Right : NaturalNumber
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [23] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'A sublist of this list, ending at the element with the given [[index|to]].\r\n     \r\n     This is a la'…
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#3]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'take'
                                            [1] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'initial'
                                            [2] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'sublistFrom'
                                [1] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [2] : Annotation
                                    Name : Lower = 'shared'
                                [3] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'sublistTo'
                        Location = List.ceylon(304,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'to'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Call
                                Expr : MemberReference
                                    Name : Lower = 'sublist'
                                Arguments : Positional
                                    Sequenced : ArgumentList[#2]
                                        [0] : NaturalNumber
                                        [1] : MemberReference
                                            Name : Lower = 'to'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [24] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'A sublist of this list, starting at the element with index [[from]], ending at the element\r\n     wit'…
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#2]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'sublistTo'
                                            [1] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'sublistFrom'
                                [1] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [2] : Annotation
                                    Name : Lower = 'shared'
                                [3] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'sublist'
                        Location = List.ceylon(314,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#2]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'from'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                                [1] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'to'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = else
                                Left : Infix
                                    Op = then
                                    Left : Infix
                                        Op = &&
                                        Left : Infix
                                            Op = &&
                                            Left : Infix
                                                Op = <=
                                                Left : MemberReference
                                                    Name : Lower = 'from'
                                                Right : MemberReference
                                                    Name : Lower = 'to'
                                            Right : Infix
                                                Op = <
                                                Left : MemberReference
                                                    Name : Lower = 'from'
                                                Right : MemberReference
                                                    Name : Lower = 'size'
                                        Right : Infix
                                            Op = >=
                                            Left : MemberReference
                                                Name : Lower = 'to'
                                            Right : NaturalNumber
                                    Right : Call
                                        Expr : TypeReference
                                            Name : Upper = 'Sublist'
                                        Arguments : Patterned
                                            Structured : ArgumentList[#2]
                                                [0] : Expression
                                                    Expr : Infix
                                                        Op = =
                                                        Left : MemberReference
                                                            Name : Lower = 'from'
                                                        Right : Call
                                                            Expr : Infix
                                                                Op = .
                                                                Left : TypeReference
                                                                    Name : Upper = 'Integer'
                                                                Right : MemberReference
                                                                    Name : Lower = 'largest'
                                                            Arguments : Positional
                                                                Sequenced : ArgumentList[#2]
                                                                    [0] : NaturalNumber
                                                                    [1] : MemberReference
                                                                        Name : Lower = 'from'
                                                [1] : Expression
                                                    Expr : Infix
                                                        Op = =
                                                        Left : MemberReference
                                                            Name : Lower = 'to'
                                                        Right : Call
                                                            Expr : Infix
                                                                Op = .
                                                                Left : TypeReference
                                                                    Name : Upper = 'Integer'
                                                                Right : MemberReference
                                                                    Name : Lower = 'smallest'
                                                            Arguments : Positional
                                                                Sequenced : ArgumentList[#2]
                                                                    [0] : Infix
                                                                        Op = -
                                                                        Left : MemberReference
                                                                            Name : Lower = 'size'
                                                                        Right : NaturalNumber
                                                                    [1] : MemberReference
                                                                        Name : Lower = 'to'
                                Right : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [25] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Return a list formed by patching the given [[list]] in place of a segment of this list\r\n     identif'…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'patch'
                        Location = List.ceylon(351,25)
                        TypeParameters : TypeParameters[#1]
                            [0] : TypeParameter
                                Name : Upper = 'Other'
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#3]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The list of new elements.'
                                    Declaration : TypedValue
                                        Name : Lower = 'list'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'List'
                                                Arguments : TypeArgumentList[#1]
                                                    [0] : Varianced
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Other'
                                [1] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The index at which the elements will occur, and the start index of the segment to replace.'
                                    Declaration : TypedValue
                                        Name : Lower = 'from'
                                        Specifier : Value
                                            Op = =
                                            Expr : MemberReference
                                                Name : Lower = 'size'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                                [2] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The length of the segment to replace.'
                                    Declaration : TypedValue
                                        Name : Lower = 'length'
                                        Specifier : Value
                                            Op = =
                                            Expr : NaturalNumber
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = else
                                Left : Infix
                                    Op = then
                                    Left : Infix
                                        Op = &&
                                        Left : Infix
                                            Op = >=
                                            Left : MemberReference
                                                Name : Lower = 'length'
                                            Right : NaturalNumber
                                        Right : SmallerBounds
                                            Left : NaturalNumber
                                            Op1 = <=
                                            Mid : MemberReference
                                                Name : Lower = 'from'
                                            Op2 = <=
                                            Right : MemberReference
                                                Name : Lower = 'size'
                                    Right : Call
                                        Expr : TypeReference
                                            Name : Upper = 'Patch'
                                        Arguments : Positional
                                            Sequenced : ArgumentList[#3]
                                                [0] : MemberReference
                                                    Name : Lower = 'list'
                                                [1] : MemberReference
                                                    Name : Lower = 'from'
                                                [2] : MemberReference
                                                    Name : Lower = 'length'
                                Right : SelfReference
                                    Reference = this
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : Union
                                            Op = |
                                            Left : TypePath[#1]
                                                [0] : TypeReference
                                                    Name : Upper = 'Element'
                                            Right : TypePath[#1]
                                                [0] : TypeReference
                                                    Name : Upper = 'Other'
                    [26] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Determine if the given [[list|sublist]] occurs at the start of this list.'
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'endsWith'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'startsWith'
                        Location = List.ceylon(365,13)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'sublist'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'List'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = &&
                                Left : Prefix
                                    Op = !
                                    Right : Call
                                        Expr : MemberReference
                                            Name : Lower = 'shorterThan'
                                        Arguments : Positional
                                            Sequenced : ArgumentList[#1]
                                                [0] : Infix
                                                    Op = .
                                                    Left : MemberReference
                                                        Name : Lower = 'sublist'
                                                    Right : MemberReference
                                                        Name : Lower = 'size'
                                Right : Call
                                    Expr : MemberReference
                                        Name : Lower = 'everyPair'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#3]
                                            [0] : SelfReference
                                                Reference = this
                                            [1] : MemberReference
                                                Name : Lower = 'sublist'
                                            [2] : InferredFunction
                                                Parameters : ParametersList[#1]
                                                    [0] : Parameters[#2]
                                                        [0] : Reference
                                                            Name : Lower = 'first'
                                                        [1] : Reference
                                                            Name : Lower = 'second'
                                                Definition : Function
                                                    Op = =>
                                                    Expr : If
                                                        Conditions : Conditions[#2]
                                                            [0] : Exists
                                                                not = False
                                                                expression : MemberReference
                                                                    Name : Lower = 'first'
                                                            [1] : Exists
                                                                not = False
                                                                expression : MemberReference
                                                                    Name : Lower = 'second'
                                                        Then : Prefix
                                                            Op = then
                                                            Right : Infix
                                                                Op = ==
                                                                Left : MemberReference
                                                                    Name : Lower = 'first'
                                                                Right : MemberReference
                                                                    Name : Lower = 'second'
                                                        Else : Prefix
                                                            Op = else
                                                            Right : Infix
                                                                Op = ==
                                                                Left : Exists
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'first'
                                                                Right : Exists
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'second'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Boolean'
                    [27] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Determine if the given [[list|sublist]] occurs at the end of this list.'
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'startsWith'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'endsWith'
                        Location = List.ceylon(376,13)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'sublist'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'List'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = &&
                                Left : Prefix
                                    Op = !
                                    Right : Call
                                        Expr : MemberReference
                                            Name : Lower = 'shorterThan'
                                        Arguments : Positional
                                            Sequenced : ArgumentList[#1]
                                                [0] : Infix
                                                    Op = .
                                                    Left : MemberReference
                                                        Name : Lower = 'sublist'
                                                    Right : MemberReference
                                                        Name : Lower = 'size'
                                Right : Call
                                    Expr : MemberReference
                                        Name : Lower = 'everyPair'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#3]
                                            [0] : Call
                                                Expr : MemberReference
                                                    Name : Lower = 'skip'
                                                Arguments : Positional
                                                    Sequenced : ArgumentList[#1]
                                                        [0] : Infix
                                                            Op = -
                                                            Left : MemberReference
                                                                Name : Lower = 'size'
                                                            Right : Infix
                                                                Op = .
                                                                Left : MemberReference
                                                                    Name : Lower = 'sublist'
                                                                Right : MemberReference
                                                                    Name : Lower = 'size'
                                            [1] : MemberReference
                                                Name : Lower = 'sublist'
                                            [2] : InferredFunction
                                                Parameters : ParametersList[#1]
                                                    [0] : Parameters[#2]
                                                        [0] : Reference
                                                            Name : Lower = 'first'
                                                        [1] : Reference
                                                            Name : Lower = 'second'
                                                Definition : Function
                                                    Op = =>
                                                    Expr : If
                                                        Conditions : Conditions[#2]
                                                            [0] : Exists
                                                                not = False
                                                                expression : MemberReference
                                                                    Name : Lower = 'first'
                                                            [1] : Exists
                                                                not = False
                                                                expression : MemberReference
                                                                    Name : Lower = 'second'
                                                        Then : Prefix
                                                            Op = then
                                                            Right : Infix
                                                                Op = ==
                                                                Left : MemberReference
                                                                    Name : Lower = 'first'
                                                                Right : MemberReference
                                                                    Name : Lower = 'second'
                                                        Else : Prefix
                                                            Op = else
                                                            Right : Infix
                                                                Op = ==
                                                                Left : Exists
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'first'
                                                                Right : Exists
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'second'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'Boolean'
                    [28] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'The indexes in this list for which the element is not null and satisfies the given\r\n     [[predicate'…
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'locations'
                                [1] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [2] : Annotation
                                    Name : Lower = 'shared'
                                [3] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'indexesWhere'
                        Location = List.ceylon(390,16)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The predicate function the indexed elements must satisfy.'
                                    Declaration : TypedFunction
                                        Name : Lower = 'selecting'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'element'
                                                        Type : Intersection
                                                            Op = &
                                                            Left : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Element'
                                                            Right : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Object'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Boolean'
                        Definition : Function
                            Op = =>
                            Expr : Enumeration
                                Arguments : ArgumentList[#1]
                                    [0] : For
                                        Iterator : ForIterator
                                            Variable : Variable
                                                Name : Lower = 'index'
                                            Containment : Containment
                                                Op = in
                                                Expr : Infix
                                                    Op = :
                                                    Left : NaturalNumber
                                                    Right : MemberReference
                                                        Name : Lower = 'size'
                                        Comprehension : If
                                            Conditions : Conditions[#2]
                                                [0] : Exists
                                                    not = False
                                                    expression : LetVariable
                                                        Pattern : Variable
                                                            Name : Lower = 'element'
                                                        Specifier : Value
                                                            Op = =
                                                            Expr : Call
                                                                Expr : MemberReference
                                                                    Name : Lower = 'getFromFirst'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#1]
                                                                        [0] : MemberReference
                                                                            Name : Lower = 'index'
                                                [1] : Call
                                                    Expr : MemberReference
                                                        Name : Lower = 'selecting'
                                                    Arguments : Positional
                                                        Sequenced : ArgumentList[#1]
                                                            [0] : MemberReference
                                                                Name : Lower = 'element'
                                            Comprehension : MemberReference
                                                Name : Lower = 'index'
                        Type : Iterable
                            Type : Variadic
                                Type : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'Integer'
                                Op = *
                    [29] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'The first index in this list for which the element is\r\n     not null and satisfies the given \r\n     '…
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'locate'
                                [1] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [2] : Annotation
                                    Name : Lower = 'shared'
                                [3] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'firstIndexWhere'
                        Location = List.ceylon(404,14)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The predicate function the indexed elements must \r\n         satisfy.'
                                    Declaration : TypedFunction
                                        Name : Lower = 'selecting'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'element'
                                                        Type : Intersection
                                                            Op = &
                                                            Left : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Element'
                                                            Right : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Object'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Boolean'
                        Definition : Block
                            statements : StatementList[#3]
                                [0] : InferredAttribute
                                    Annotations : Annotations
                                        Items : AnnotationList[#1]
                                            [0] : Annotation
                                                Name : Lower = 'variable'
                                    Name : Lower = 'index'
                                    Location = List.ceylon(408,24)
                                    Definition : Value
                                        Op = =
                                        Expr : NaturalNumber
                                [1] : While
                                    Conditions : Conditions[#1]
                                        [0] : Infix
                                            Op = <
                                            Left : MemberReference
                                                Name : Lower = 'index'
                                            Right : MemberReference
                                                Name : Lower = 'size'
                                    Block : Block
                                        statements : StatementList[#2]
                                            [0] : If
                                                Conditionals : Conditionals[#1]
                                                    [0] : ConditionalBlock
                                                        Conditions : Conditions[#2]
                                                            [0] : Exists
                                                                not = False
                                                                expression : LetVariable
                                                                    Pattern : Variable
                                                                        Name : Lower = 'element'
                                                                    Specifier : Value
                                                                        Op = =
                                                                        Expr : Call
                                                                            Expr : MemberReference
                                                                                Name : Lower = 'getFromFirst'
                                                                            Arguments : Positional
                                                                                Sequenced : ArgumentList[#1]
                                                                                    [0] : MemberReference
                                                                                        Name : Lower = 'index'
                                                            [1] : Call
                                                                Expr : MemberReference
                                                                    Name : Lower = 'selecting'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#1]
                                                                        [0] : MemberReference
                                                                            Name : Lower = 'element'
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : Return
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'index'
                                            [1] : Expression
                                                Expr : PostfixIncDec
                                                    Left : MemberReference
                                                        Name : Lower = 'index'
                                                    Op = ++
                                [2] : Return
                                    Expr : MemberReference
                                        Name : Lower = 'null'
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Integer'
                    [30] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'The last index in this list for which the element is\r\n     not null and satisfies the given \r\n     ['…
                            Items : AnnotationList[#4]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'locateLast'
                                [1] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [2] : Annotation
                                    Name : Lower = 'shared'
                                [3] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'lastIndexWhere'
                        Location = List.ceylon(425,14)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The predicate function the indexed elements must \r\n         satisfy.'
                                    Declaration : TypedFunction
                                        Name : Lower = 'selecting'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'element'
                                                        Type : Intersection
                                                            Op = &
                                                            Left : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Element'
                                                            Right : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Object'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Boolean'
                        Definition : Block
                            statements : StatementList[#3]
                                [0] : InferredAttribute
                                    Annotations : Annotations
                                        Items : AnnotationList[#1]
                                            [0] : Annotation
                                                Name : Lower = 'variable'
                                    Name : Lower = 'index'
                                    Location = List.ceylon(429,24)
                                    Definition : Value
                                        Op = =
                                        Expr : MemberReference
                                            Name : Lower = 'size'
                                [1] : While
                                    Conditions : Conditions[#1]
                                        [0] : Infix
                                            Op = >
                                            Left : MemberReference
                                                Name : Lower = 'index'
                                            Right : NaturalNumber
                                    Block : Block
                                        statements : StatementList[#2]
                                            [0] : Expression
                                                Expr : PostfixIncDec
                                                    Left : MemberReference
                                                        Name : Lower = 'index'
                                                    Op = --
                                            [1] : If
                                                Conditionals : Conditionals[#1]
                                                    [0] : ConditionalBlock
                                                        Conditions : Conditions[#2]
                                                            [0] : Exists
                                                                not = False
                                                                expression : LetVariable
                                                                    Pattern : Variable
                                                                        Name : Lower = 'element'
                                                                    Specifier : Value
                                                                        Op = =
                                                                        Expr : Call
                                                                            Expr : MemberReference
                                                                                Name : Lower = 'getFromFirst'
                                                                            Arguments : Positional
                                                                                Sequenced : ArgumentList[#1]
                                                                                    [0] : MemberReference
                                                                                        Name : Lower = 'index'
                                                            [1] : Call
                                                                Expr : MemberReference
                                                                    Name : Lower = 'selecting'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#1]
                                                                        [0] : MemberReference
                                                                            Name : Lower = 'element'
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : Return
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'index'
                                [2] : Return
                                    Expr : MemberReference
                                        Name : Lower = 'null'
                        Type : Nullable
                            Left : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Integer'
                    [31] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Trim the elements satisfying the given [[predicate \r\n     function|trimming]], along with any null e'…
                            Items : AnnotationList[#2]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'trim'
                        Location = List.ceylon(447,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The predicate function that the trimmed elements \r\n         satisfy.'
                                    Declaration : TypedFunction
                                        Name : Lower = 'trimming'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'elem'
                                                        Type : Intersection
                                                            Op = &
                                                            Left : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Element'
                                                            Right : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Object'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Boolean'
                        Definition : Block
                            statements : StatementList[#1]
                                [0] : If
                                    Conditionals : Conditionals[#1]
                                        [0] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : Infix
                                                    Op = >
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                            Block : Block
                                                statements : StatementList[#6]
                                                    [0] : InferredAttribute
                                                        Annotations : Annotations
                                                        Name : Lower = 'end'
                                                        Location = List.ceylon(452,19)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : Infix
                                                                Op = -
                                                                Left : MemberReference
                                                                    Name : Lower = 'size'
                                                                Right : NaturalNumber
                                                    [1] : TypedAttribute
                                                        Annotations : Annotations
                                                            Items : AnnotationList[#1]
                                                                [0] : Annotation
                                                                    Name : Lower = 'variable'
                                                        Name : Lower = 'from'
                                                        Location = List.ceylon(453,30)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : Prefix
                                                                Op = -
                                                                Right : NaturalNumber
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                                    [2] : TypedAttribute
                                                        Annotations : Annotations
                                                            Items : AnnotationList[#1]
                                                                [0] : Annotation
                                                                    Name : Lower = 'variable'
                                                        Name : Lower = 'to'
                                                        Location = List.ceylon(454,30)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : Prefix
                                                                Op = -
                                                                Right : NaturalNumber
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                                    [3] : For
                                                        Iterator : ForIterator
                                                            Variable : Variable
                                                                Name : Lower = 'index'
                                                            Containment : Containment
                                                                Op = in
                                                                Expr : Infix
                                                                    Op = ..
                                                                    Left : NaturalNumber
                                                                    Right : MemberReference
                                                                        Name : Lower = 'end'
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : If
                                                                    Conditionals : Conditionals[#1]
                                                                        [0] : ConditionalBlock
                                                                            Conditions : Conditions[#2]
                                                                                [0] : Exists
                                                                                    not = False
                                                                                    expression : LetVariable
                                                                                        Pattern : Variable
                                                                                            Name : Lower = 'elem'
                                                                                        Specifier : Value
                                                                                            Op = =
                                                                                            Expr : Call
                                                                                                Expr : MemberReference
                                                                                                    Name : Lower = 'getFromFirst'
                                                                                                Arguments : Positional
                                                                                                    Sequenced : ArgumentList[#1]
                                                                                                        [0] : MemberReference
                                                                                                            Name : Lower = 'index'
                                                                                [1] : Prefix
                                                                                    Op = !
                                                                                    Right : Call
                                                                                        Expr : MemberReference
                                                                                            Name : Lower = 'trimming'
                                                                                        Arguments : Positional
                                                                                            Sequenced : ArgumentList[#1]
                                                                                                [0] : MemberReference
                                                                                                    Name : Lower = 'elem'
                                                                            Block : Block
                                                                                statements : StatementList[#2]
                                                                                    [0] : Expression
                                                                                        Expr : Infix
                                                                                            Op = =
                                                                                            Left : MemberReference
                                                                                                Name : Lower = 'from'
                                                                                            Right : MemberReference
                                                                                                Name : Lower = 'index'
                                                                                    [1] : Break
                                                        ElseBlock : Block
                                                            statements : StatementList[#1]
                                                                [0] : Return
                                                                    Expr : Tuple
                                                    [4] : For
                                                        Iterator : ForIterator
                                                            Variable : Variable
                                                                Name : Lower = 'index'
                                                            Containment : Containment
                                                                Op = in
                                                                Expr : Infix
                                                                    Op = ..
                                                                    Left : MemberReference
                                                                        Name : Lower = 'end'
                                                                    Right : NaturalNumber
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : If
                                                                    Conditionals : Conditionals[#1]
                                                                        [0] : ConditionalBlock
                                                                            Conditions : Conditions[#2]
                                                                                [0] : Exists
                                                                                    not = False
                                                                                    expression : LetVariable
                                                                                        Pattern : Variable
                                                                                            Name : Lower = 'elem'
                                                                                        Specifier : Value
                                                                                            Op = =
                                                                                            Expr : Call
                                                                                                Expr : MemberReference
                                                                                                    Name : Lower = 'getFromFirst'
                                                                                                Arguments : Positional
                                                                                                    Sequenced : ArgumentList[#1]
                                                                                                        [0] : MemberReference
                                                                                                            Name : Lower = 'index'
                                                                                [1] : Prefix
                                                                                    Op = !
                                                                                    Right : Call
                                                                                        Expr : MemberReference
                                                                                            Name : Lower = 'trimming'
                                                                                        Arguments : Positional
                                                                                            Sequenced : ArgumentList[#1]
                                                                                                [0] : MemberReference
                                                                                                    Name : Lower = 'elem'
                                                                            Block : Block
                                                                                statements : StatementList[#2]
                                                                                    [0] : Expression
                                                                                        Expr : Infix
                                                                                            Op = =
                                                                                            Left : MemberReference
                                                                                                Name : Lower = 'to'
                                                                                            Right : MemberReference
                                                                                                Name : Lower = 'index'
                                                                                    [1] : Break
                                                        ElseBlock : Block
                                                            statements : StatementList[#1]
                                                                [0] : Return
                                                                    Expr : Tuple
                                                    [5] : Return
                                                        Expr : Indexed
                                                            Expr : SelfReference
                                                                Reference = this
                                                            Index : SpannedIndex
                                                                From : MemberReference
                                                                    Name : Lower = 'from'
                                                                To : MemberReference
                                                                    Name : Lower = 'to'
                                    ElseBlock : Block
                                        statements : StatementList[#1]
                                            [0] : Return
                                                Expr : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [32] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Trim the elements satisfying the given [[predicate \r\n     function|trimming]], along with any null e'…
                            Items : AnnotationList[#2]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'trimLeading'
                        Location = List.ceylon(489,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The predicate function that the trimmed elements \r\n         satisfy.'
                                    Declaration : TypedFunction
                                        Name : Lower = 'trimming'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'elem'
                                                        Type : Intersection
                                                            Op = &
                                                            Left : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Element'
                                                            Right : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Object'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Boolean'
                        Definition : Block
                            statements : StatementList[#2]
                                [0] : If
                                    Conditionals : Conditionals[#1]
                                        [0] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : Infix
                                                    Op = >
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                            Block : Block
                                                statements : StatementList[#2]
                                                    [0] : InferredAttribute
                                                        Annotations : Annotations
                                                        Name : Lower = 'end'
                                                        Location = List.ceylon(494,19)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : Infix
                                                                Op = -
                                                                Left : MemberReference
                                                                    Name : Lower = 'size'
                                                                Right : NaturalNumber
                                                    [1] : For
                                                        Iterator : ForIterator
                                                            Variable : Variable
                                                                Name : Lower = 'index'
                                                            Containment : Containment
                                                                Op = in
                                                                Expr : Infix
                                                                    Op = ..
                                                                    Left : NaturalNumber
                                                                    Right : MemberReference
                                                                        Name : Lower = 'end'
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : If
                                                                    Conditionals : Conditionals[#1]
                                                                        [0] : ConditionalBlock
                                                                            Conditions : Conditions[#2]
                                                                                [0] : Exists
                                                                                    not = False
                                                                                    expression : LetVariable
                                                                                        Pattern : Variable
                                                                                            Name : Lower = 'elem'
                                                                                        Specifier : Value
                                                                                            Op = =
                                                                                            Expr : Call
                                                                                                Expr : MemberReference
                                                                                                    Name : Lower = 'getFromFirst'
                                                                                                Arguments : Positional
                                                                                                    Sequenced : ArgumentList[#1]
                                                                                                        [0] : MemberReference
                                                                                                            Name : Lower = 'index'
                                                                                [1] : Prefix
                                                                                    Op = !
                                                                                    Right : Call
                                                                                        Expr : MemberReference
                                                                                            Name : Lower = 'trimming'
                                                                                        Arguments : Positional
                                                                                            Sequenced : ArgumentList[#1]
                                                                                                [0] : MemberReference
                                                                                                    Name : Lower = 'elem'
                                                                            Block : Block
                                                                                statements : StatementList[#1]
                                                                                    [0] : Return
                                                                                        Expr : Indexed
                                                                                            Expr : SelfReference
                                                                                                Reference = this
                                                                                            Index : SpannedIndex
                                                                                                From : MemberReference
                                                                                                    Name : Lower = 'index'
                                                                                                To : MemberReference
                                                                                                    Name : Lower = 'end'
                                [1] : Return
                                    Expr : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [33] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Trim the elements satisfying the given [[predicate \r\n     function|trimming]], along with any null e'…
                            Items : AnnotationList[#2]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'trimTrailing'
                        Location = List.ceylon(512,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The predicate function that the trimmed elements \r\n         satisfy.'
                                    Declaration : TypedFunction
                                        Name : Lower = 'trimming'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'elem'
                                                        Type : Intersection
                                                            Op = &
                                                            Left : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Element'
                                                            Right : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Object'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Boolean'
                        Definition : Block
                            statements : StatementList[#2]
                                [0] : If
                                    Conditionals : Conditionals[#1]
                                        [0] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : Infix
                                                    Op = >
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                            Block : Block
                                                statements : StatementList[#2]
                                                    [0] : InferredAttribute
                                                        Annotations : Annotations
                                                        Name : Lower = 'end'
                                                        Location = List.ceylon(517,19)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : Infix
                                                                Op = -
                                                                Left : MemberReference
                                                                    Name : Lower = 'size'
                                                                Right : NaturalNumber
                                                    [1] : For
                                                        Iterator : ForIterator
                                                            Variable : Variable
                                                                Name : Lower = 'index'
                                                            Containment : Containment
                                                                Op = in
                                                                Expr : Infix
                                                                    Op = ..
                                                                    Left : MemberReference
                                                                        Name : Lower = 'end'
                                                                    Right : NaturalNumber
                                                        Block : Block
                                                            statements : StatementList[#1]
                                                                [0] : If
                                                                    Conditionals : Conditionals[#1]
                                                                        [0] : ConditionalBlock
                                                                            Conditions : Conditions[#2]
                                                                                [0] : Exists
                                                                                    not = False
                                                                                    expression : LetVariable
                                                                                        Pattern : Variable
                                                                                            Name : Lower = 'elem'
                                                                                        Specifier : Value
                                                                                            Op = =
                                                                                            Expr : Call
                                                                                                Expr : MemberReference
                                                                                                    Name : Lower = 'getFromFirst'
                                                                                                Arguments : Positional
                                                                                                    Sequenced : ArgumentList[#1]
                                                                                                        [0] : MemberReference
                                                                                                            Name : Lower = 'index'
                                                                                [1] : Prefix
                                                                                    Op = !
                                                                                    Right : Call
                                                                                        Expr : MemberReference
                                                                                            Name : Lower = 'trimming'
                                                                                        Arguments : Positional
                                                                                            Sequenced : ArgumentList[#1]
                                                                                                [0] : MemberReference
                                                                                                    Name : Lower = 'elem'
                                                                            Block : Block
                                                                                statements : StatementList[#1]
                                                                                    [0] : Return
                                                                                        Expr : Indexed
                                                                                            Expr : SelfReference
                                                                                                Reference = this
                                                                                            Index : SpannedIndex
                                                                                                From : NaturalNumber
                                                                                                To : MemberReference
                                                                                                    Name : Lower = 'index'
                                [1] : Return
                                    Expr : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [34] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Return two lists, the first containing the elements\r\n     that occur before the given [[index]], the'…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.1.0'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'slice'
                        Location = List.ceylon(541,22)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'index'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Tuple
                                Arguments : ArgumentList[#2]
                                    [0] : Indexed
                                        Expr : SelfReference
                                            Reference = this
                                        Index : ToIndex
                                            To : Infix
                                                Op = -
                                                Left : MemberReference
                                                    Name : Lower = 'index'
                                                Right : NaturalNumber
                                    [1] : Indexed
                                        Expr : SelfReference
                                            Reference = this
                                        Index : FromIndex
                                            From : MemberReference
                                                Name : Lower = 'index'
                        Type : Array
                            Type : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'List'
                                    Arguments : TypeArgumentList[#1]
                                        [0] : Varianced
                                            Type : TypePath[#1]
                                                [0] : TypeReference
                                                    Name : Upper = 'Element'
                            Size : NaturalNumber
                    [35] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Select the first elements of this list, returning a \r\n     list no longer than the given length. If '…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#3]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'terminal'
                                            [1] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'sublistTo'
                                            [2] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'take'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'initial'
                        Location = List.ceylon(559,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'length'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Indexed
                                Expr : SelfReference
                                    Reference = this
                                Index : ToIndex
                                    To : Infix
                                        Op = -
                                        Left : MemberReference
                                            Name : Lower = 'length'
                                        Right : NaturalNumber
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [36] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Select the last elements of the list, returning a list \r\n     no longer than the given length. If th'…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'see'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : Function
                                                Path : ReferencePath
                                                    Package = False
                                                    Names : Identifiers[#1]
                                                        [0] : Any = 'initial'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'terminal'
                        Location = List.ceylon(574,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'length'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Indexed
                                Expr : SelfReference
                                    Reference = this
                                Index : FromIndex
                                    From : Infix
                                        Op = -
                                        Left : MemberReference
                                            Name : Lower = 'size'
                                        Right : MemberReference
                                            Name : Lower = 'length'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [37] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'span'
                        Location = List.ceylon(578,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#2]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'from'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                                [1] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'to'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Block
                            statements : StatementList[#1]
                                [0] : If
                                    Conditionals : Conditionals[#1]
                                        [0] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : Infix
                                                    Op = >
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                            Block : Block
                                                statements : StatementList[#2]
                                                    [0] : InferredAttribute
                                                        Annotations : Annotations
                                                        Name : Lower = 'end'
                                                        Location = List.ceylon(580,19)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : Infix
                                                                Op = -
                                                                Left : MemberReference
                                                                    Name : Lower = 'size'
                                                                Right : NaturalNumber
                                                    [1] : If
                                                        Conditionals : Conditionals[#1]
                                                            [0] : ConditionalBlock
                                                                Conditions : Conditions[#1]
                                                                    [0] : Infix
                                                                        Op = <=
                                                                        Left : MemberReference
                                                                            Name : Lower = 'from'
                                                                        Right : MemberReference
                                                                            Name : Lower = 'to'
                                                                Block : Block
                                                                    statements : StatementList[#1]
                                                                        [0] : Return
                                                                            Expr : If
                                                                                Conditions : Conditions[#1]
                                                                                    [0] : Infix
                                                                                        Op = &&
                                                                                        Left : Infix
                                                                                            Op = >=
                                                                                            Left : MemberReference
                                                                                                Name : Lower = 'to'
                                                                                            Right : NaturalNumber
                                                                                        Right : Infix
                                                                                            Op = <=
                                                                                            Left : MemberReference
                                                                                                Name : Lower = 'from'
                                                                                            Right : MemberReference
                                                                                                Name : Lower = 'end'
                                                                                Then : Prefix
                                                                                    Op = then
                                                                                    Right : Call
                                                                                        Expr : TypeReference
                                                                                            Name : Upper = 'ArraySequence'
                                                                                        Arguments : Positional
                                                                                            Sequenced : ArgumentList[#1]
                                                                                                [0] : Call
                                                                                                    Expr : TypeReference
                                                                                                        Name : Upper = 'Array'
                                                                                                    Arguments : Positional
                                                                                                        Sequenced : ArgumentList[#1]
                                                                                                            [0] : Call
                                                                                                                Expr : MemberReference
                                                                                                                    Name : Lower = 'sublist'
                                                                                                                Arguments : Positional
                                                                                                                    Sequenced : ArgumentList[#2]
                                                                                                                        [0] : MemberReference
                                                                                                                            Name : Lower = 'from'
                                                                                                                        [1] : MemberReference
                                                                                                                            Name : Lower = 'to'
                                                                                Else : Prefix
                                                                                    Op = else
                                                                                    Right : Tuple
                                                        ElseBlock : Block
                                                            statements : StatementList[#1]
                                                                [0] : Return
                                                                    Expr : If
                                                                        Conditions : Conditions[#1]
                                                                            [0] : Infix
                                                                                Op = &&
                                                                                Left : Infix
                                                                                    Op = >=
                                                                                    Left : MemberReference
                                                                                        Name : Lower = 'from'
                                                                                    Right : NaturalNumber
                                                                                Right : Infix
                                                                                    Op = <=
                                                                                    Left : MemberReference
                                                                                        Name : Lower = 'to'
                                                                                    Right : MemberReference
                                                                                        Name : Lower = 'end'
                                                                        Then : Prefix
                                                                            Op = then
                                                                            Right : Call
                                                                                Expr : TypeReference
                                                                                    Name : Upper = 'ArraySequence'
                                                                                Arguments : Positional
                                                                                    Sequenced : ArgumentList[#1]
                                                                                        [0] : Call
                                                                                            Expr : TypeReference
                                                                                                Name : Upper = 'Array'
                                                                                            Arguments : Positional
                                                                                                Sequenced : ArgumentList[#1]
                                                                                                    [0] : Infix
                                                                                                        Op = .
                                                                                                        Left : Call
                                                                                                            Expr : MemberReference
                                                                                                                Name : Lower = 'sublist'
                                                                                                            Arguments : Positional
                                                                                                                Sequenced : ArgumentList[#2]
                                                                                                                    [0] : MemberReference
                                                                                                                        Name : Lower = 'to'
                                                                                                                    [1] : MemberReference
                                                                                                                        Name : Lower = 'from'
                                                                                                        Right : MemberReference
                                                                                                            Name : Lower = 'reversed'
                                                                        Else : Prefix
                                                                            Op = else
                                                                            Right : Tuple
                                    ElseBlock : Block
                                        statements : StatementList[#1]
                                            [0] : Return
                                                Expr : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [38] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'spanFrom'
                        Location = List.ceylon(600,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'from'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = else
                                Left : Infix
                                    Op = then
                                    Left : Infix
                                        Op = <
                                        Left : MemberReference
                                            Name : Lower = 'from'
                                        Right : MemberReference
                                            Name : Lower = 'size'
                                    Right : Call
                                        Expr : MemberReference
                                            Name : Lower = 'span'
                                        Arguments : Positional
                                            Sequenced : ArgumentList[#2]
                                                [0] : MemberReference
                                                    Name : Lower = 'from'
                                                [1] : Infix
                                                    Op = -
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                Right : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [39] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'spanTo'
                        Location = List.ceylon(604,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'to'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = else
                                Left : Infix
                                    Op = then
                                    Left : Infix
                                        Op = >=
                                        Left : MemberReference
                                            Name : Lower = 'to'
                                        Right : NaturalNumber
                                    Right : Call
                                        Expr : MemberReference
                                            Name : Lower = 'span'
                                        Arguments : Positional
                                            Sequenced : ArgumentList[#2]
                                                [0] : NaturalNumber
                                                [1] : MemberReference
                                                    Name : Lower = 'to'
                                Right : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [40] : TypedMethod
                        Annotations : Annotations
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'actual'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'measure'
                        Location = List.ceylon(608,19)
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#2]
                                [0] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'from'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                                [1] : Declared
                                    Annotations : Annotations
                                    Declaration : TypedValue
                                        Name : Lower = 'length'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Integer'
                        Definition : Function
                            Op = =>
                            Expr : Infix
                                Op = else
                                Left : Infix
                                    Op = then
                                    Left : Infix
                                        Op = >
                                        Left : MemberReference
                                            Name : Lower = 'length'
                                        Right : NaturalNumber
                                    Right : Call
                                        Expr : MemberReference
                                            Name : Lower = 'span'
                                        Arguments : Positional
                                            Sequenced : ArgumentList[#2]
                                                [0] : MemberReference
                                                    Name : Lower = 'from'
                                                [1] : Infix
                                                    Op = -
                                                    Left : Infix
                                                        Op = +
                                                        Left : MemberReference
                                                            Name : Lower = 'from'
                                                        Right : MemberReference
                                                            Name : Lower = 'length'
                                                    Right : NaturalNumber
                                Right : Tuple
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Element'
                    [41] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'A sequence containing the results of applying the given \r\n     mapping to the elements of this list.'
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'shared'
                                [1] : Annotation
                                    Name : Lower = 'default'
                                [2] : Annotation
                                    Name : Lower = 'actual'
                        Name : Lower = 'collect'
                        Location = List.ceylon(616,18)
                        TypeParameters : TypeParameters[#1]
                            [0] : TypeParameter
                                Name : Upper = 'Result'
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The transformation applied to the elements.'
                                    Declaration : TypedFunction
                                        Name : Lower = 'collecting'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'element'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Element'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Result'
                        Definition : Block
                            statements : StatementList[#1]
                                [0] : If
                                    Conditionals : Conditionals[#1]
                                        [0] : ConditionalBlock
                                            Conditions : Conditions[#1]
                                                [0] : MemberReference
                                                    Name : Lower = 'empty'
                                            Block : Block
                                                statements : StatementList[#1]
                                                    [0] : Return
                                                        Expr : Tuple
                                    ElseBlock : Block
                                        statements : StatementList[#2]
                                            [0] : Object
                                                Annotations : Annotations
                                                Name : Lower = 'list'
                                                Location = List.ceylon(623,20)
                                                Extends : Extends
                                                    Instantiation : Instantiation
                                                        Class : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Object'
                                                Satisfies : Satisfies
                                                    Types : TypeList[#1]
                                                        [0] : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'List'
                                                                Arguments : TypeArgumentList[#1]
                                                                    [0] : Varianced
                                                                        Type : TypePath[#1]
                                                                            [0] : TypeReference
                                                                                Name : Upper = 'Result'
                                                Definition : Block
                                                    statements : StatementList[#3]
                                                        [0] : Specification
                                                            Primary : MemberReference
                                                                Name : Lower = 'lastIndex'
                                                            Value : Function
                                                                Op = =>
                                                                Expr : Infix
                                                                    Op = .
                                                                    Left : SelfReference
                                                                        Reference = outer
                                                                    Right : MemberReference
                                                                        Name : Lower = 'lastIndex'
                                                        [1] : Expression
                                                            Expr : Infix
                                                                Op = =
                                                                Left : MemberReference
                                                                    Name : Lower = 'size'
                                                                Right : Infix
                                                                    Op = .
                                                                    Left : SelfReference
                                                                        Reference = outer
                                                                    Right : MemberReference
                                                                        Name : Lower = 'size'
                                                        [2] : Specification
                                                            Primary : Member
                                                                Name : Lower = 'getFromFirst'
                                                                Parameters : ParametersList[#1]
                                                                    [0] : Parameters[#1]
                                                                        [0] : Declared
                                                                            Annotations : Annotations
                                                                            Declaration : TypedValue
                                                                                Name : Lower = 'index'
                                                                                Type : TypePath[#1]
                                                                                    [0] : TypeReference
                                                                                        Name : Upper = 'Integer'
                                                            Value : Function
                                                                Op = =>
                                                                Expr : If
                                                                    Conditions : Conditions[#1]
                                                                        [0] : SmallerBounds
                                                                            Left : NaturalNumber
                                                                            Op1 = <=
                                                                            Mid : MemberReference
                                                                                Name : Lower = 'index'
                                                                            Op2 = <
                                                                            Right : MemberReference
                                                                                Name : Lower = 'size'
                                                                    Then : Prefix
                                                                        Op = then
                                                                        Right : Call
                                                                            Expr : MemberReference
                                                                                Name : Lower = 'collecting'
                                                                            Arguments : Positional
                                                                                Sequenced : ArgumentList[#1]
                                                                                    [0] : Call
                                                                                        Expr : Infix
                                                                                            Op = .
                                                                                            Left : SelfReference
                                                                                                Reference = outer
                                                                                            Right : MemberReference
                                                                                                Name : Lower = 'getElement'
                                                                                        Arguments : Positional
                                                                                            Sequenced : ArgumentList[#1]
                                                                                                [0] : MemberReference
                                                                                                    Name : Lower = 'index'
                                                                    Else : Prefix
                                                                        Op = else
                                                                        Right : MemberReference
                                                                            Name : Lower = 'null'
                                            [1] : Return
                                                Expr : Call
                                                    Expr : TypeReference
                                                        Name : Upper = 'ArraySequence'
                                                    Arguments : Positional
                                                        Sequenced : ArgumentList[#1]
                                                            [0] : Call
                                                                Expr : TypeReference
                                                                    Name : Upper = 'Array'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#1]
                                                                        [0] : MemberReference
                                                                            Name : Lower = 'list'
                        Type : Union
                            Op = |
                            Left : Tuple
                                Type : TypeList[#1]
                                    [0] : Variadic
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Result'
                                        Op = +
                            Right : Tuple
                    [42] : Class
                        Annotations : Annotations
                        Name : Upper = 'Indexes'
                        Location = List.ceylon(637,11)
                        Extends : Extends
                            Instantiation : Instantiation
                                Class : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'Object'
                        Satisfies : Satisfies
                            Types : TypeList[#1]
                                [0] : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'List'
                                        Arguments : TypeArgumentList[#1]
                                            [0] : Varianced
                                                Type : TypePath[#1]
                                                    [0] : TypeReference
                                                        Name : Upper = 'Integer'
                        Definition : Block
                            statements : StatementList[#6]
                                [0] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'lastIndex'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = .
                                            Left : SelfReference
                                                Reference = outer
                                            Right : MemberReference
                                                Name : Lower = 'lastIndex'
                                [1] : Specification
                                    Primary : Member
                                        Name : Lower = 'getFromFirst'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'index'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = then
                                            Left : Call
                                                Expr : MemberReference
                                                    Name : Lower = 'defines'
                                                Arguments : Positional
                                                    Sequenced : ArgumentList[#1]
                                                        [0] : MemberReference
                                                            Name : Lower = 'index'
                                            Right : MemberReference
                                                Name : Lower = 'index'
                                [2] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'clone'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = :
                                            Left : NaturalNumber
                                            Right : MemberReference
                                                Name : Lower = 'size'
                                [3] : Specification
                                    Primary : Member
                                        Name : Lower = 'span'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#2]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'from'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                                [1] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'to'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : Indexed
                                            Expr : Call
                                                Expr : MemberReference
                                                    Name : Lower = 'clone'
                                                Arguments : Positional
                                            Index : SpannedIndex
                                                From : MemberReference
                                                    Name : Lower = 'from'
                                                To : MemberReference
                                                    Name : Lower = 'to'
                                [4] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'string'
                                    Value : Function
                                        Op = =>
                                        Expr : If
                                            Conditions : Conditions[#1]
                                                [0] : Exists
                                                    not = False
                                                    expression : LetVariable
                                                        Pattern : Variable
                                                            Name : Lower = 'endIndex'
                                                        Specifier : Value
                                                            Op = =
                                                            Expr : MemberReference
                                                                Name : Lower = 'lastIndex'
                                            Then : Prefix
                                                Op = then
                                                Right : Interpolation
                                                    Strings : Strings[#2]
                                                        [0] : StartInterpolationString = '{ 0, ... , '
                                                        [1] : EndInterpolationString = ' }'
                                                    Expressions : Expressions[#1]
                                                        [0] : MemberReference
                                                            Name : Lower = 'endIndex'
                                            Else : Prefix
                                                Op = else
                                                Right : StandardString = '{}'
                                [5] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'iterator'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Object
                                            Satisfied : Satisfies
                                                Types : TypeList[#1]
                                                    [0] : TypePath[#1]
                                                        [0] : TypeReference
                                                            Name : Upper = 'Iterator'
                                                            Arguments : TypeArgumentList[#1]
                                                                [0] : Varianced
                                                                    Type : TypePath[#1]
                                                                        [0] : TypeReference
                                                                            Name : Upper = 'Integer'
                                            Block : Block
                                                statements : StatementList[#3]
                                                    [0] : InferredAttribute
                                                        Annotations : Annotations
                                                            Items : AnnotationList[#1]
                                                                [0] : Annotation
                                                                    Name : Lower = 'variable'
                                                        Name : Lower = 'i'
                                                        Location = List.ceylon(657,32)
                                                        Definition : Value
                                                            Op = =
                                                            Expr : NaturalNumber
                                                    [1] : Specification
                                                        Primary : Call
                                                            Expr : MemberReference
                                                                Name : Lower = 'next'
                                                            Arguments : Positional
                                                        Value : Function
                                                            Op = =>
                                                            Expr : Infix
                                                                Op = else
                                                                Left : Infix
                                                                    Op = then
                                                                    Left : Infix
                                                                        Op = <
                                                                        Left : MemberReference
                                                                            Name : Lower = 'i'
                                                                        Right : MemberReference
                                                                            Name : Lower = 'size'
                                                                    Right : PostfixIncDec
                                                                        Left : MemberReference
                                                                            Name : Lower = 'i'
                                                                        Op = ++
                                                                Right : MemberReference
                                                                    Name : Lower = 'finished'
                                                    [2] : Specification
                                                        Primary : MemberReference
                                                            Name : Lower = 'string'
                                                        Value : Function
                                                            Op = =>
                                                            Expr : Interpolation
                                                                Strings : Strings[#2]
                                                                    [0] : StartInterpolationString = ''
                                                                    [1] : EndInterpolationString = '.iterator()'
                                                                Expressions : Expressions[#1]
                                                                    [0] : Infix
                                                                        Op = .
                                                                        Left : SelfReference
                                                                            Reference = outer
                                                                        Right : MemberReference
                                                                            Name : Lower = 'string'
                    [43] : Class
                        Annotations : Annotations
                        Name : Upper = 'Sublist'
                        Location = List.ceylon(664,11)
                        Parameters : Parameters[#2]
                            [0] : Declared
                                Annotations : Annotations
                                Declaration : TypedValue
                                    Name : Lower = 'from'
                                    Type : TypePath[#1]
                                        [0] : TypeReference
                                            Name : Upper = 'Integer'
                            [1] : Declared
                                Annotations : Annotations
                                Declaration : TypedValue
                                    Name : Lower = 'to'
                                    Type : TypePath[#1]
                                        [0] : TypeReference
                                            Name : Upper = 'Integer'
                        Extends : Extends
                            Instantiation : Instantiation
                                Class : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'Object'
                        Satisfies : Satisfies
                            Types : TypeList[#1]
                                [0] : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'List'
                                        Arguments : TypeArgumentList[#1]
                                            [0] : Varianced
                                                Type : TypePath[#1]
                                                    [0] : TypeReference
                                                        Name : Upper = 'Element'
                        Definition : Block
                            statements : StatementList[#12]
                                [0] : Assertion
                                    Conditions : Conditions[#3]
                                        [0] : Infix
                                            Op = >=
                                            Left : MemberReference
                                                Name : Lower = 'from'
                                            Right : NaturalNumber
                                        [1] : Infix
                                            Op = >=
                                            Left : MemberReference
                                                Name : Lower = 'to'
                                            Right : NaturalNumber
                                        [2] : Infix
                                            Op = <=
                                            Left : MemberReference
                                                Name : Lower = 'from'
                                            Right : MemberReference
                                                Name : Lower = 'to'
                                [1] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'first'
                                    Value : Function
                                        Op = =>
                                        Expr : Indexed
                                            Expr : SelfReference
                                                Reference = outer
                                            Index : MemberReference
                                                Name : Lower = 'from'
                                [2] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'last'
                                    Value : Function
                                        Op = =>
                                        Expr : Indexed
                                            Expr : SelfReference
                                                Reference = outer
                                            Index : MemberReference
                                                Name : Lower = 'to'
                                [3] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'size'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = +
                                            Left : Infix
                                                Op = -
                                                Left : MemberReference
                                                    Name : Lower = 'to'
                                                Right : MemberReference
                                                    Name : Lower = 'from'
                                            Right : NaturalNumber
                                [4] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'lastIndex'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = -
                                            Left : MemberReference
                                                Name : Lower = 'to'
                                            Right : MemberReference
                                                Name : Lower = 'from'
                                [5] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'rest'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = else
                                            Left : Infix
                                                Op = then
                                                Left : Infix
                                                    Op = ==
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                                Right : Tuple
                                            Right : Call
                                                Expr : Infix
                                                    Op = .
                                                    Left : SelfReference
                                                        Reference = outer
                                                    Right : TypeReference
                                                        Name : Upper = 'Sublist'
                                                Arguments : Positional
                                                    Sequenced : ArgumentList[#2]
                                                        [0] : Infix
                                                            Op = +
                                                            Left : MemberReference
                                                                Name : Lower = 'from'
                                                            Right : NaturalNumber
                                                        [1] : MemberReference
                                                            Name : Lower = 'to'
                                [6] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'exceptLast'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = else
                                            Left : Infix
                                                Op = then
                                                Left : Infix
                                                    Op = ==
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                                Right : Tuple
                                            Right : Call
                                                Expr : Infix
                                                    Op = .
                                                    Left : SelfReference
                                                        Reference = outer
                                                    Right : TypeReference
                                                        Name : Upper = 'Sublist'
                                                Arguments : Positional
                                                    Sequenced : ArgumentList[#2]
                                                        [0] : MemberReference
                                                            Name : Lower = 'from'
                                                        [1] : Infix
                                                            Op = -
                                                            Left : MemberReference
                                                                Name : Lower = 'to'
                                                            Right : NaturalNumber
                                [7] : Specification
                                    Primary : Member
                                        Name : Lower = 'getFromFirst'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'index'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : If
                                            Conditions : Conditions[#1]
                                                [0] : SmallerBounds
                                                    Left : NaturalNumber
                                                    Op1 = <=
                                                    Mid : MemberReference
                                                        Name : Lower = 'index'
                                                    Op2 = <=
                                                    Right : Infix
                                                        Op = -
                                                        Left : MemberReference
                                                            Name : Lower = 'to'
                                                        Right : MemberReference
                                                            Name : Lower = 'from'
                                            Then : Prefix
                                                Op = then
                                                Right : Call
                                                    Expr : Infix
                                                        Op = .
                                                        Left : SelfReference
                                                            Reference = outer
                                                        Right : MemberReference
                                                            Name : Lower = 'getFromFirst'
                                                    Arguments : Positional
                                                        Sequenced : ArgumentList[#1]
                                                            [0] : Infix
                                                                Op = +
                                                                Left : MemberReference
                                                                    Name : Lower = 'index'
                                                                Right : MemberReference
                                                                    Name : Lower = 'from'
                                            Else : Prefix
                                                Op = else
                                                Right : MemberReference
                                                    Name : Lower = 'null'
                                [8] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'iterator'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Let
                                            Lets : LetVariableList[#1]
                                                [0] : LetVariable
                                                    Pattern : Variable
                                                        Name : Lower = 'o'
                                                    Specifier : Value
                                                        Op = =
                                                        Expr : SelfReference
                                                            Reference = outer
                                            Expr : Object
                                                Satisfied : Satisfies
                                                    Types : TypeList[#1]
                                                        [0] : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Iterator'
                                                                Arguments : TypeArgumentList[#1]
                                                                    [0] : Varianced
                                                                        Type : TypePath[#1]
                                                                            [0] : TypeReference
                                                                                Name : Upper = 'Element'
                                                Block : Block
                                                    statements : StatementList[#3]
                                                        [0] : InferredAttribute
                                                            Annotations : Annotations
                                                                Items : AnnotationList[#1]
                                                                    [0] : Annotation
                                                                        Name : Lower = 'variable'
                                                            Name : Lower = 'i'
                                                            Location = List.ceylon(691,36)
                                                            Definition : Value
                                                                Op = =
                                                                Expr : MemberReference
                                                                    Name : Lower = 'from'
                                                        [1] : Specification
                                                            Primary : Call
                                                                Expr : MemberReference
                                                                    Name : Lower = 'next'
                                                                Arguments : Positional
                                                            Value : Function
                                                                Op = =>
                                                                Expr : If
                                                                    Conditions : Conditions[#1]
                                                                        [0] : Infix
                                                                            Op = <=
                                                                            Left : MemberReference
                                                                                Name : Lower = 'i'
                                                                            Right : MemberReference
                                                                                Name : Lower = 'to'
                                                                    Then : Prefix
                                                                        Op = then
                                                                        Right : Call
                                                                            Expr : Infix
                                                                                Op = .
                                                                                Left : MemberReference
                                                                                    Name : Lower = 'o'
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'getElement'
                                                                            Arguments : Positional
                                                                                Sequenced : ArgumentList[#1]
                                                                                    [0] : PostfixIncDec
                                                                                        Left : MemberReference
                                                                                            Name : Lower = 'i'
                                                                                        Op = ++
                                                                    Else : Prefix
                                                                        Op = else
                                                                        Right : MemberReference
                                                                            Name : Lower = 'finished'
                                                        [2] : Specification
                                                            Primary : MemberReference
                                                                Name : Lower = 'string'
                                                            Value : Function
                                                                Op = =>
                                                                Expr : Interpolation
                                                                    Strings : Strings[#2]
                                                                        [0] : StartInterpolationString = ''
                                                                        [1] : EndInterpolationString = '.iterator()'
                                                                    Expressions : Expressions[#1]
                                                                        [0] : Infix
                                                                            Op = .
                                                                            Left : SelfReference
                                                                                Reference = outer
                                                                            Right : MemberReference
                                                                                Name : Lower = 'string'
                                [9] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'clone'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Indexed
                                            Expr : SelfReference
                                                Reference = outer
                                            Index : SpannedIndex
                                                From : MemberReference
                                                    Name : Lower = 'from'
                                                To : MemberReference
                                                    Name : Lower = 'to'
                                [10] : Specification
                                    Primary : Member
                                        Name : Lower = 'sublist'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#2]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'from'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                                [1] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'to'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : Call
                                            Expr : Infix
                                                Op = .
                                                Left : SelfReference
                                                    Reference = outer
                                                Right : MemberReference
                                                    Name : Lower = 'sublist'
                                            Arguments : Patterned
                                                Structured : ArgumentList[#2]
                                                    [0] : Expression
                                                        Expr : Infix
                                                            Op = =
                                                            Left : MemberReference
                                                                Name : Lower = 'from'
                                                            Right : Call
                                                                Expr : Infix
                                                                    Op = .
                                                                    Left : TypeReference
                                                                        Name : Upper = 'Integer'
                                                                    Right : MemberReference
                                                                        Name : Lower = 'largest'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#2]
                                                                        [0] : Infix
                                                                            Op = +
                                                                            Left : MemberReference
                                                                                Name : Lower = 'from'
                                                                            Right : Infix
                                                                                Op = .
                                                                                Left : SelfReference
                                                                                    Reference = this
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'from'
                                                                        [1] : Infix
                                                                            Op = .
                                                                            Left : SelfReference
                                                                                Reference = this
                                                                            Right : MemberReference
                                                                                Name : Lower = 'from'
                                                    [1] : Expression
                                                        Expr : Infix
                                                            Op = =
                                                            Left : MemberReference
                                                                Name : Lower = 'to'
                                                            Right : Call
                                                                Expr : Infix
                                                                    Op = .
                                                                    Left : TypeReference
                                                                        Name : Upper = 'Integer'
                                                                    Right : MemberReference
                                                                        Name : Lower = 'smallest'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#2]
                                                                        [0] : Infix
                                                                            Op = +
                                                                            Left : MemberReference
                                                                                Name : Lower = 'to'
                                                                            Right : Infix
                                                                                Op = .
                                                                                Left : SelfReference
                                                                                    Reference = this
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'from'
                                                                        [1] : Infix
                                                                            Op = .
                                                                            Left : SelfReference
                                                                                Reference = this
                                                                            Right : MemberReference
                                                                                Name : Lower = 'to'
                                [11] : Specification
                                    Primary : Member
                                        Name : Lower = 'span'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#2]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'from'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                                [1] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'to'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = else
                                            Left : Infix
                                                Op = then
                                                Left : Infix
                                                    Op = <=
                                                    Left : MemberReference
                                                        Name : Lower = 'from'
                                                    Right : MemberReference
                                                        Name : Lower = 'to'
                                                Right : Call
                                                    Expr : Infix
                                                        Op = .
                                                        Left : SelfReference
                                                            Reference = outer
                                                        Right : MemberReference
                                                            Name : Lower = 'span'
                                                    Arguments : Patterned
                                                        Structured : ArgumentList[#2]
                                                            [0] : Expression
                                                                Expr : Infix
                                                                    Op = =
                                                                    Left : MemberReference
                                                                        Name : Lower = 'from'
                                                                    Right : Call
                                                                        Expr : Infix
                                                                            Op = .
                                                                            Left : TypeReference
                                                                                Name : Upper = 'Integer'
                                                                            Right : MemberReference
                                                                                Name : Lower = 'largest'
                                                                        Arguments : Positional
                                                                            Sequenced : ArgumentList[#2]
                                                                                [0] : Infix
                                                                                    Op = +
                                                                                    Left : MemberReference
                                                                                        Name : Lower = 'from'
                                                                                    Right : Infix
                                                                                        Op = .
                                                                                        Left : SelfReference
                                                                                            Reference = this
                                                                                        Right : MemberReference
                                                                                            Name : Lower = 'from'
                                                                                [1] : Infix
                                                                                    Op = .
                                                                                    Left : SelfReference
                                                                                        Reference = this
                                                                                    Right : MemberReference
                                                                                        Name : Lower = 'from'
                                                            [1] : Expression
                                                                Expr : Infix
                                                                    Op = =
                                                                    Left : MemberReference
                                                                        Name : Lower = 'to'
                                                                    Right : Call
                                                                        Expr : Infix
                                                                            Op = .
                                                                            Left : TypeReference
                                                                                Name : Upper = 'Integer'
                                                                            Right : MemberReference
                                                                                Name : Lower = 'smallest'
                                                                        Arguments : Positional
                                                                            Sequenced : ArgumentList[#2]
                                                                                [0] : Infix
                                                                                    Op = +
                                                                                    Left : MemberReference
                                                                                        Name : Lower = 'to'
                                                                                    Right : Infix
                                                                                        Op = .
                                                                                        Left : SelfReference
                                                                                            Reference = this
                                                                                        Right : MemberReference
                                                                                            Name : Lower = 'from'
                                                                                [1] : Infix
                                                                                    Op = .
                                                                                    Left : SelfReference
                                                                                        Reference = this
                                                                                    Right : MemberReference
                                                                                        Name : Lower = 'to'
                                            Right : Call
                                                Expr : Infix
                                                    Op = .
                                                    Left : SelfReference
                                                        Reference = outer
                                                    Right : MemberReference
                                                        Name : Lower = 'span'
                                                Arguments : Patterned
                                                    Structured : ArgumentList[#2]
                                                        [0] : Expression
                                                            Expr : Infix
                                                                Op = =
                                                                Left : MemberReference
                                                                    Name : Lower = 'from'
                                                                Right : Call
                                                                    Expr : Infix
                                                                        Op = .
                                                                        Left : TypeReference
                                                                            Name : Upper = 'Integer'
                                                                        Right : MemberReference
                                                                            Name : Lower = 'smallest'
                                                                    Arguments : Positional
                                                                        Sequenced : ArgumentList[#2]
                                                                            [0] : Infix
                                                                                Op = +
                                                                                Left : MemberReference
                                                                                    Name : Lower = 'from'
                                                                                Right : Infix
                                                                                    Op = .
                                                                                    Left : SelfReference
                                                                                        Reference = this
                                                                                    Right : MemberReference
                                                                                        Name : Lower = 'from'
                                                                            [1] : Infix
                                                                                Op = .
                                                                                Left : SelfReference
                                                                                    Reference = this
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'to'
                                                        [1] : Expression
                                                            Expr : Infix
                                                                Op = =
                                                                Left : MemberReference
                                                                    Name : Lower = 'to'
                                                                Right : Call
                                                                    Expr : Infix
                                                                        Op = .
                                                                        Left : TypeReference
                                                                            Name : Upper = 'Integer'
                                                                        Right : MemberReference
                                                                            Name : Lower = 'largest'
                                                                    Arguments : Positional
                                                                        Sequenced : ArgumentList[#2]
                                                                            [0] : Infix
                                                                                Op = +
                                                                                Left : MemberReference
                                                                                    Name : Lower = 'to'
                                                                                Right : Infix
                                                                                    Op = .
                                                                                    Left : SelfReference
                                                                                        Reference = this
                                                                                    Right : MemberReference
                                                                                        Name : Lower = 'from'
                                                                            [1] : Infix
                                                                                Op = .
                                                                                Left : SelfReference
                                                                                    Reference = this
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'from'
                    [44] : Class
                        Annotations : Annotations
                        Name : Upper = 'Repeat'
                        Location = List.ceylon(719,11)
                        Parameters : Parameters[#1]
                            [0] : Declared
                                Annotations : Annotations
                                Declaration : TypedValue
                                    Name : Lower = 'times'
                                    Type : TypePath[#1]
                                        [0] : TypeReference
                                            Name : Upper = 'Integer'
                        Extends : Extends
                            Instantiation : Instantiation
                                Class : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'Object'
                        Satisfies : Satisfies
                            Types : TypeList[#1]
                                [0] : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'List'
                                        Arguments : TypeArgumentList[#1]
                                            [0] : Varianced
                                                Type : TypePath[#1]
                                                    [0] : TypeReference
                                                        Name : Upper = 'Element'
                        Definition : Block
                            statements : StatementList[#7]
                                [0] : Assertion
                                    Conditions : Conditions[#1]
                                        [0] : Infix
                                            Op = >
                                            Left : MemberReference
                                                Name : Lower = 'times'
                                            Right : NaturalNumber
                                [1] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'size'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = *
                                            Left : Infix
                                                Op = .
                                                Left : SelfReference
                                                    Reference = outer
                                                Right : MemberReference
                                                    Name : Lower = 'size'
                                            Right : MemberReference
                                                Name : Lower = 'times'
                                [2] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'lastIndex'
                                    Value : Function
                                        Op = =>
                                        Expr : Let
                                            Lets : LetVariableList[#1]
                                                [0] : LetVariable
                                                    Pattern : Variable
                                                        Name : Lower = 'size'
                                                    Specifier : Value
                                                        Op = =
                                                        Expr : Infix
                                                            Op = .
                                                            Left : SelfReference
                                                                Reference = this
                                                            Right : MemberReference
                                                                Name : Lower = 'size'
                                            Expr : Infix
                                                Op = then
                                                Left : Infix
                                                    Op = >
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                                Right : Infix
                                                    Op = -
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                [3] : Specification
                                    Primary : Member
                                        Name : Lower = 'getFromFirst'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'index'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : Let
                                            Lets : LetVariableList[#1]
                                                [0] : LetVariable
                                                    Pattern : Variable
                                                        Name : Lower = 'size'
                                                    Specifier : Value
                                                        Op = =
                                                        Expr : Infix
                                                            Op = .
                                                            Left : SelfReference
                                                                Reference = outer
                                                            Right : MemberReference
                                                                Name : Lower = 'size'
                                            Expr : If
                                                Conditions : Conditions[#1]
                                                    [0] : Infix
                                                        Op = <
                                                        Left : MemberReference
                                                            Name : Lower = 'index'
                                                        Right : Infix
                                                            Op = *
                                                            Left : MemberReference
                                                                Name : Lower = 'size'
                                                            Right : MemberReference
                                                                Name : Lower = 'times'
                                                Then : Prefix
                                                    Op = then
                                                    Right : Call
                                                        Expr : Infix
                                                            Op = .
                                                            Left : SelfReference
                                                                Reference = outer
                                                            Right : MemberReference
                                                                Name : Lower = 'getFromFirst'
                                                        Arguments : Positional
                                                            Sequenced : ArgumentList[#1]
                                                                [0] : Infix
                                                                    Op = %
                                                                    Left : MemberReference
                                                                        Name : Lower = 'index'
                                                                    Right : MemberReference
                                                                        Name : Lower = 'size'
                                                Else : Prefix
                                                    Op = else
                                                    Right : MemberReference
                                                        Name : Lower = 'null'
                                [4] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'clone'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Call
                                            Expr : Infix
                                                Op = .
                                                Left : Call
                                                    Expr : Infix
                                                        Op = .
                                                        Left : SelfReference
                                                            Reference = outer
                                                        Right : MemberReference
                                                            Name : Lower = 'clone'
                                                    Arguments : Positional
                                                Right : TypeReference
                                                    Name : Upper = 'Repeat'
                                            Arguments : Positional
                                                Sequenced : ArgumentList[#1]
                                                    [0] : MemberReference
                                                        Name : Lower = 'times'
                                [5] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'iterator'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Call
                                            Expr : TypeReference
                                                Name : Upper = 'CycledIterator'
                                            Arguments : Positional
                                                Sequenced : ArgumentList[#2]
                                                    [0] : SelfReference
                                                        Reference = outer
                                                    [1] : MemberReference
                                                        Name : Lower = 'times'
                                [6] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'string'
                                    Value : Function
                                        Op = =>
                                        Expr : Interpolation
                                            Strings : Strings[#3]
                                                [0] : StartInterpolationString = '('
                                                [1] : MidInterpolationString = ').repeat('
                                                [2] : EndInterpolationString = ')'
                                            Expressions : Expressions[#2]
                                                [0] : Infix
                                                    Op = .
                                                    Left : SelfReference
                                                        Reference = outer
                                                    Right : MemberReference
                                                        Name : Lower = 'string'
                                                [1] : MemberReference
                                                    Name : Lower = 'times'
                    [45] : Class
                        Annotations : Annotations
                        Name : Upper = 'Patch'
                        Location = List.ceylon(745,11)
                        TypeParameters : TypeParameters[#1]
                            [0] : TypeParameter
                                Name : Upper = 'Other'
                        Parameters : Parameters[#3]
                            [0] : Declared
                                Annotations : Annotations
                                Declaration : TypedValue
                                    Name : Lower = 'list'
                                    Type : TypePath[#1]
                                        [0] : TypeReference
                                            Name : Upper = 'List'
                                            Arguments : TypeArgumentList[#1]
                                                [0] : Varianced
                                                    Type : TypePath[#1]
                                                        [0] : TypeReference
                                                            Name : Upper = 'Other'
                            [1] : Declared
                                Annotations : Annotations
                                Declaration : TypedValue
                                    Name : Lower = 'from'
                                    Type : TypePath[#1]
                                        [0] : TypeReference
                                            Name : Upper = 'Integer'
                            [2] : Declared
                                Annotations : Annotations
                                Declaration : TypedValue
                                    Name : Lower = 'length'
                                    Type : TypePath[#1]
                                        [0] : TypeReference
                                            Name : Upper = 'Integer'
                        Extends : Extends
                            Instantiation : Instantiation
                                Class : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'Object'
                        Satisfies : Satisfies
                            Types : TypeList[#1]
                                [0] : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'List'
                                        Arguments : TypeArgumentList[#1]
                                            [0] : Varianced
                                                Type : Union
                                                    Op = |
                                                    Left : TypePath[#1]
                                                        [0] : TypeReference
                                                            Name : Upper = 'Element'
                                                    Right : TypePath[#1]
                                                        [0] : TypeReference
                                                            Name : Upper = 'Other'
                        Definition : Block
                            statements : StatementList[#8]
                                [0] : Assertion
                                    Conditions : Conditions[#1]
                                        [0] : Infix
                                            Op = >=
                                            Left : MemberReference
                                                Name : Lower = 'length'
                                            Right : NaturalNumber
                                [1] : Assertion
                                    Conditions : Conditions[#1]
                                        [0] : SmallerBounds
                                            Left : NaturalNumber
                                            Op1 = <=
                                            Mid : MemberReference
                                                Name : Lower = 'from'
                                            Op2 = <=
                                            Right : Infix
                                                Op = .
                                                Left : SelfReference
                                                    Reference = outer
                                                Right : MemberReference
                                                    Name : Lower = 'size'
                                [2] : InferredAttribute
                                    Annotations : Annotations
                                    Name : Lower = 'exactLength'
                                    Location = List.ceylon(753,15)
                                    Definition : Function
                                        Op = =>
                                        Expr : Call
                                            Expr : MemberReference
                                                Name : Lower = 'smallest'
                                            Arguments : Positional
                                                Sequenced : ArgumentList[#2]
                                                    [0] : MemberReference
                                                        Name : Lower = 'length'
                                                    [1] : Infix
                                                        Op = -
                                                        Left : Infix
                                                            Op = .
                                                            Left : SelfReference
                                                                Reference = outer
                                                            Right : MemberReference
                                                                Name : Lower = 'size'
                                                        Right : MemberReference
                                                            Name : Lower = 'from'
                                [3] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'size'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = -
                                            Left : Infix
                                                Op = +
                                                Left : Infix
                                                    Op = .
                                                    Left : SelfReference
                                                        Reference = outer
                                                    Right : MemberReference
                                                        Name : Lower = 'size'
                                                Right : Infix
                                                    Op = .
                                                    Left : MemberReference
                                                        Name : Lower = 'list'
                                                    Right : MemberReference
                                                        Name : Lower = 'size'
                                            Right : MemberReference
                                                Name : Lower = 'exactLength'
                                [4] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'lastIndex'
                                    Value : Function
                                        Op = =>
                                        Expr : Let
                                            Lets : LetVariableList[#1]
                                                [0] : LetVariable
                                                    Pattern : Variable
                                                        Name : Lower = 'size'
                                                    Specifier : Value
                                                        Op = =
                                                        Expr : Infix
                                                            Op = .
                                                            Left : SelfReference
                                                                Reference = this
                                                            Right : MemberReference
                                                                Name : Lower = 'size'
                                            Expr : Infix
                                                Op = then
                                                Left : Infix
                                                    Op = >
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                                Right : Infix
                                                    Op = -
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                [5] : Specification
                                    Primary : Member
                                        Name : Lower = 'getFromFirst'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'index'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : If
                                            Conditions : Conditions[#1]
                                                [0] : Infix
                                                    Op = <
                                                    Left : MemberReference
                                                        Name : Lower = 'index'
                                                    Right : MemberReference
                                                        Name : Lower = 'from'
                                            Then : Prefix
                                                Op = then
                                                Right : Call
                                                    Expr : Infix
                                                        Op = .
                                                        Left : SelfReference
                                                            Reference = outer
                                                        Right : MemberReference
                                                            Name : Lower = 'getFromFirst'
                                                    Arguments : Positional
                                                        Sequenced : ArgumentList[#1]
                                                            [0] : MemberReference
                                                                Name : Lower = 'index'
                                            Else : Prefix
                                                Op = else
                                                Right : If
                                                    Conditions : Conditions[#1]
                                                        [0] : Infix
                                                            Op = <
                                                            Left : Infix
                                                                Op = -
                                                                Left : MemberReference
                                                                    Name : Lower = 'index'
                                                                Right : MemberReference
                                                                    Name : Lower = 'from'
                                                            Right : Infix
                                                                Op = .
                                                                Left : MemberReference
                                                                    Name : Lower = 'list'
                                                                Right : MemberReference
                                                                    Name : Lower = 'size'
                                                    Then : Prefix
                                                        Op = then
                                                        Right : Call
                                                            Expr : Infix
                                                                Op = .
                                                                Left : MemberReference
                                                                    Name : Lower = 'list'
                                                                Right : MemberReference
                                                                    Name : Lower = 'getFromFirst'
                                                            Arguments : Positional
                                                                Sequenced : ArgumentList[#1]
                                                                    [0] : Infix
                                                                        Op = -
                                                                        Left : MemberReference
                                                                            Name : Lower = 'index'
                                                                        Right : MemberReference
                                                                            Name : Lower = 'from'
                                                    Else : Prefix
                                                        Op = else
                                                        Right : Call
                                                            Expr : Infix
                                                                Op = .
                                                                Left : SelfReference
                                                                    Reference = outer
                                                                Right : MemberReference
                                                                    Name : Lower = 'getFromFirst'
                                                            Arguments : Positional
                                                                Sequenced : ArgumentList[#1]
                                                                    [0] : Infix
                                                                        Op = +
                                                                        Left : Infix
                                                                            Op = -
                                                                            Left : MemberReference
                                                                                Name : Lower = 'index'
                                                                            Right : Infix
                                                                                Op = .
                                                                                Left : MemberReference
                                                                                    Name : Lower = 'list'
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'size'
                                                                        Right : MemberReference
                                                                            Name : Lower = 'exactLength'
                                [6] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'clone'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Call
                                            Expr : Infix
                                                Op = .
                                                Left : Call
                                                    Expr : Infix
                                                        Op = .
                                                        Left : SelfReference
                                                            Reference = outer
                                                        Right : MemberReference
                                                            Name : Lower = 'clone'
                                                    Arguments : Positional
                                                Right : TypeReference
                                                    Name : Upper = 'Patch'
                                            Arguments : Positional
                                                Sequenced : ArgumentList[#3]
                                                    [0] : Call
                                                        Expr : Infix
                                                            Op = .
                                                            Left : MemberReference
                                                                Name : Lower = 'list'
                                                            Right : MemberReference
                                                                Name : Lower = 'clone'
                                                        Arguments : Positional
                                                    [1] : MemberReference
                                                        Name : Lower = 'from'
                                                    [2] : MemberReference
                                                        Name : Lower = 'exactLength'
                                [7] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'iterator'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Let
                                            Lets : LetVariableList[#2]
                                                [0] : LetVariable
                                                    Pattern : Variable
                                                        Name : Lower = 'iter'
                                                    Specifier : Value
                                                        Op = =
                                                        Expr : Call
                                                            Expr : Infix
                                                                Op = .
                                                                Left : SelfReference
                                                                    Reference = outer
                                                                Right : MemberReference
                                                                    Name : Lower = 'iterator'
                                                            Arguments : Positional
                                                [1] : LetVariable
                                                    Pattern : Variable
                                                        Name : Lower = 'patchIter'
                                                    Specifier : Value
                                                        Op = =
                                                        Expr : Call
                                                            Expr : Infix
                                                                Op = .
                                                                Left : MemberReference
                                                                    Name : Lower = 'list'
                                                                Right : MemberReference
                                                                    Name : Lower = 'iterator'
                                                            Arguments : Positional
                                            Expr : Object
                                                Satisfied : Satisfies
                                                    Types : TypeList[#1]
                                                        [0] : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Iterator'
                                                                Arguments : TypeArgumentList[#1]
                                                                    [0] : Varianced
                                                                        Type : Union
                                                                            Op = |
                                                                            Left : TypePath[#1]
                                                                                [0] : TypeReference
                                                                                    Name : Upper = 'Element'
                                                                            Right : TypePath[#1]
                                                                                [0] : TypeReference
                                                                                    Name : Upper = 'Other'
                                                Block : Block
                                                    statements : StatementList[#3]
                                                        [0] : InferredAttribute
                                                            Annotations : Annotations
                                                                Items : AnnotationList[#1]
                                                                    [0] : Annotation
                                                                        Name : Lower = 'variable'
                                                            Name : Lower = 'index'
                                                            Location = List.ceylon(775,32)
                                                            Definition : Value
                                                                Op = =
                                                                Expr : Prefix
                                                                    Op = -
                                                                    Right : NaturalNumber
                                                        [1] : TypedMethod
                                                            Annotations : Annotations
                                                                Items : AnnotationList[#2]
                                                                    [0] : Annotation
                                                                        Name : Lower = 'shared'
                                                                    [1] : Annotation
                                                                        Name : Lower = 'actual'
                                                            Name : Lower = 'next'
                                                            Location = List.ceylon(776,54)
                                                            Parameters : ParametersList[#1]
                                                            Definition : Block
                                                                statements : StatementList[#2]
                                                                    [0] : If
                                                                        Conditionals : Conditionals[#1]
                                                                            [0] : ConditionalBlock
                                                                                Conditions : Conditions[#1]
                                                                                    [0] : Infix
                                                                                        Op = ==
                                                                                        Left : PrefixIncDec
                                                                                            op = ++
                                                                                            Left : MemberReference
                                                                                                Name : Lower = 'index'
                                                                                        Right : MemberReference
                                                                                            Name : Lower = 'from'
                                                                                Block : Block
                                                                                    statements : StatementList[#1]
                                                                                        [0] : For
                                                                                            Iterator : ForIterator
                                                                                                Variable : Variable
                                                                                                    Name : Lower = 'skip'
                                                                                                Containment : Containment
                                                                                                    Op = in
                                                                                                    Expr : Infix
                                                                                                        Op = :
                                                                                                        Left : NaturalNumber
                                                                                                        Right : MemberReference
                                                                                                            Name : Lower = 'exactLength'
                                                                                            Block : Block
                                                                                                statements : StatementList[#1]
                                                                                                    [0] : Expression
                                                                                                        Expr : Call
                                                                                                            Expr : Infix
                                                                                                                Op = .
                                                                                                                Left : MemberReference
                                                                                                                    Name : Lower = 'iter'
                                                                                                                Right : MemberReference
                                                                                                                    Name : Lower = 'next'
                                                                                                            Arguments : Positional
                                                                    [1] : Return
                                                                        Expr : If
                                                                            Conditions : Conditions[#1]
                                                                                [0] : SmallerBounds
                                                                                    Left : NaturalNumber
                                                                                    Op1 = <=
                                                                                    Mid : Infix
                                                                                        Op = -
                                                                                        Left : MemberReference
                                                                                            Name : Lower = 'index'
                                                                                        Right : MemberReference
                                                                                            Name : Lower = 'from'
                                                                                    Op2 = <
                                                                                    Right : Infix
                                                                                        Op = .
                                                                                        Left : MemberReference
                                                                                            Name : Lower = 'list'
                                                                                        Right : MemberReference
                                                                                            Name : Lower = 'size'
                                                                            Then : Prefix
                                                                                Op = then
                                                                                Right : Call
                                                                                    Expr : Infix
                                                                                        Op = .
                                                                                        Left : MemberReference
                                                                                            Name : Lower = 'patchIter'
                                                                                        Right : MemberReference
                                                                                            Name : Lower = 'next'
                                                                                    Arguments : Positional
                                                                            Else : Prefix
                                                                                Op = else
                                                                                Right : Call
                                                                                    Expr : Infix
                                                                                        Op = .
                                                                                        Left : MemberReference
                                                                                            Name : Lower = 'iter'
                                                                                        Right : MemberReference
                                                                                            Name : Lower = 'next'
                                                                                    Arguments : Positional
                                                            Type : Union
                                                                Op = |
                                                                Left : Union
                                                                    Op = |
                                                                    Left : TypePath[#1]
                                                                        [0] : TypeReference
                                                                            Name : Upper = 'Element'
                                                                    Right : TypePath[#1]
                                                                        [0] : TypeReference
                                                                            Name : Upper = 'Other'
                                                                Right : TypePath[#1]
                                                                    [0] : TypeReference
                                                                        Name : Upper = 'Finished'
                                                        [2] : Specification
                                                            Primary : MemberReference
                                                                Name : Lower = 'string'
                                                            Value : Function
                                                                Op = =>
                                                                Expr : Interpolation
                                                                    Strings : Strings[#2]
                                                                        [0] : StartInterpolationString = ''
                                                                        [1] : EndInterpolationString = '.iterator()'
                                                                    Expressions : Expressions[#1]
                                                                        [0] : Infix
                                                                            Op = .
                                                                            Left : SelfReference
                                                                                Reference = outer
                                                                            Right : MemberReference
                                                                                Name : Lower = 'string'
                    [46] : Class
                        Annotations : Annotations
                        Name : Upper = 'Reversed'
                        Location = List.ceylon(791,11)
                        Extends : Extends
                            Instantiation : Instantiation
                                Class : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'Object'
                        Satisfies : Satisfies
                            Types : TypeList[#1]
                                [0] : TypePath[#1]
                                    [0] : TypeReference
                                        Name : Upper = 'List'
                                        Arguments : TypeArgumentList[#1]
                                            [0] : Varianced
                                                Type : TypePath[#1]
                                                    [0] : TypeReference
                                                        Name : Upper = 'Element'
                        Definition : Block
                            statements : StatementList[#10]
                                [0] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'lastIndex'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = .
                                            Left : SelfReference
                                                Reference = outer
                                            Right : MemberReference
                                                Name : Lower = 'lastIndex'
                                [1] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'size'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = .
                                            Left : SelfReference
                                                Reference = outer
                                            Right : MemberReference
                                                Name : Lower = 'size'
                                [2] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'first'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = .
                                            Left : SelfReference
                                                Reference = outer
                                            Right : MemberReference
                                                Name : Lower = 'last'
                                [3] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'last'
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = .
                                            Left : SelfReference
                                                Reference = outer
                                            Right : MemberReference
                                                Name : Lower = 'first'
                                [4] : Specification
                                    Primary : MemberReference
                                        Name : Lower = 'reversed'
                                    Value : Function
                                        Op = =>
                                        Expr : SelfReference
                                            Reference = outer
                                [5] : InferredMethod
                                    Annotations : Annotations
                                    Name : Lower = 'outerIndex'
                                    Location = List.ceylon(802,18)
                                    Parameters : ParametersList[#1]
                                        [0] : Parameters[#1]
                                            [0] : Declared
                                                Annotations : Annotations
                                                Declaration : TypedValue
                                                    Name : Lower = 'index'
                                                    Type : TypePath[#1]
                                                        [0] : TypeReference
                                                            Name : Upper = 'Integer'
                                    Definition : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = -
                                            Left : Infix
                                                Op = -
                                                Left : MemberReference
                                                    Name : Lower = 'size'
                                                Right : NaturalNumber
                                            Right : MemberReference
                                                Name : Lower = 'index'
                                [6] : Specification
                                    Primary : Member
                                        Name : Lower = 'getFromFirst'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#1]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'index'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : If
                                            Conditions : Conditions[#1]
                                                [0] : Infix
                                                    Op = >
                                                    Left : MemberReference
                                                        Name : Lower = 'size'
                                                    Right : NaturalNumber
                                            Then : Prefix
                                                Op = then
                                                Right : Call
                                                    Expr : Infix
                                                        Op = .
                                                        Left : SelfReference
                                                            Reference = outer
                                                        Right : MemberReference
                                                            Name : Lower = 'getFromFirst'
                                                    Arguments : Positional
                                                        Sequenced : ArgumentList[#1]
                                                            [0] : Call
                                                                Expr : MemberReference
                                                                    Name : Lower = 'outerIndex'
                                                                Arguments : Positional
                                                                    Sequenced : ArgumentList[#1]
                                                                        [0] : MemberReference
                                                                            Name : Lower = 'index'
                                            Else : Prefix
                                                Op = else
                                                Right : MemberReference
                                                    Name : Lower = 'null'
                                [7] : Specification
                                    Primary : Member
                                        Name : Lower = 'span'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#2]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'from'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                                [1] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'to'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                    Value : Function
                                        Op = =>
                                        Expr : Indexed
                                            Expr : SelfReference
                                                Reference = outer
                                            Index : SpannedIndex
                                                From : Call
                                                    Expr : MemberReference
                                                        Name : Lower = 'outerIndex'
                                                    Arguments : Positional
                                                        Sequenced : ArgumentList[#1]
                                                            [0] : MemberReference
                                                                Name : Lower = 'from'
                                                To : Call
                                                    Expr : MemberReference
                                                        Name : Lower = 'outerIndex'
                                                    Arguments : Positional
                                                        Sequenced : ArgumentList[#1]
                                                            [0] : MemberReference
                                                                Name : Lower = 'to'
                                [8] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'clone'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Infix
                                            Op = .
                                            Left : Call
                                                Expr : Infix
                                                    Op = .
                                                    Left : SelfReference
                                                        Reference = outer
                                                    Right : MemberReference
                                                        Name : Lower = 'clone'
                                                Arguments : Positional
                                            Right : MemberReference
                                                Name : Lower = 'reversed'
                                [9] : Specification
                                    Primary : Call
                                        Expr : MemberReference
                                            Name : Lower = 'iterator'
                                        Arguments : Positional
                                    Value : Function
                                        Op = =>
                                        Expr : Let
                                            Lets : LetVariableList[#1]
                                                [0] : LetVariable
                                                    Pattern : Variable
                                                        Name : Lower = 'outerList'
                                                    Specifier : Value
                                                        Op = =
                                                        Expr : SelfReference
                                                            Reference = outer
                                            Expr : Object
                                                Satisfied : Satisfies
                                                    Types : TypeList[#1]
                                                        [0] : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Iterator'
                                                                Arguments : TypeArgumentList[#1]
                                                                    [0] : Varianced
                                                                        Type : TypePath[#1]
                                                                            [0] : TypeReference
                                                                                Name : Upper = 'Element'
                                                Block : Block
                                                    statements : StatementList[#3]
                                                        [0] : InferredAttribute
                                                            Annotations : Annotations
                                                                Items : AnnotationList[#1]
                                                                    [0] : Annotation
                                                                        Name : Lower = 'variable'
                                                            Name : Lower = 'index'
                                                            Location = List.ceylon(817,32)
                                                            Definition : Value
                                                                Op = =
                                                                Expr : Call
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'outerIndex'
                                                                    Arguments : Positional
                                                                        Sequenced : ArgumentList[#1]
                                                                            [0] : NaturalNumber
                                                        [1] : Specification
                                                            Primary : Call
                                                                Expr : MemberReference
                                                                    Name : Lower = 'next'
                                                                Arguments : Positional
                                                            Value : Function
                                                                Op = =>
                                                                Expr : Infix
                                                                    Op = else
                                                                    Left : Infix
                                                                        Op = then
                                                                        Left : Infix
                                                                            Op = <
                                                                            Left : MemberReference
                                                                                Name : Lower = 'index'
                                                                            Right : NaturalNumber
                                                                        Right : MemberReference
                                                                            Name : Lower = 'finished'
                                                                    Right : Call
                                                                        Expr : Infix
                                                                            Op = .
                                                                            Left : MemberReference
                                                                                Name : Lower = 'outerList'
                                                                            Right : MemberReference
                                                                                Name : Lower = 'getElement'
                                                                        Arguments : Positional
                                                                            Sequenced : ArgumentList[#1]
                                                                                [0] : PostfixIncDec
                                                                                    Left : MemberReference
                                                                                        Name : Lower = 'index'
                                                                                    Op = --
                                                        [2] : Specification
                                                            Primary : MemberReference
                                                                Name : Lower = 'string'
                                                            Value : Function
                                                                Op = =>
                                                                Expr : Interpolation
                                                                    Strings : Strings[#2]
                                                                        [0] : StartInterpolationString = ''
                                                                        [1] : EndInterpolationString = '.iterator()'
                                                                    Expressions : Expressions[#1]
                                                                        [0] : Infix
                                                                            Op = .
                                                                            Left : SelfReference
                                                                                Reference = outer
                                                                            Right : MemberReference
                                                                                Name : Lower = 'string'
                    [47] : TypedMethod
                        Annotations : Annotations
                            Doc : StandardString = 'Produces a list with the same indexes as this list. For \r\n     every index, the element is the resul'…
                            Items : AnnotationList[#3]
                                [0] : Annotation
                                    Name : Lower = 'since'
                                    Arguments : Positional
                                        Sequenced : ArgumentList[#1]
                                            [0] : StandardString = '1.3.0'
                                [1] : Annotation
                                    Name : Lower = 'shared'
                                [2] : Annotation
                                    Name : Lower = 'default'
                        Name : Lower = 'mapElements'
                        Location = List.ceylon(833,18)
                        TypeParameters : TypeParameters[#1]
                            [0] : TypeParameter
                                Name : Upper = 'Result'
                        Parameters : ParametersList[#1]
                            [0] : Parameters[#1]
                                [0] : Declared
                                    Annotations : Annotations
                                        Doc : StandardString = 'The function that transforms an index/item pair of\r\n         this list, producing the element of the'…
                                    Declaration : TypedFunction
                                        Name : Lower = 'mapping'
                                        Parameters : ParametersList[#1]
                                            [0] : Parameters[#2]
                                                [0] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'index'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Integer'
                                                [1] : Declared
                                                    Annotations : Annotations
                                                    Declaration : TypedValue
                                                        Name : Lower = 'item'
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Element'
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Result'
                        Definition : Function
                            Op = =>
                            Expr : Object
                                Extended : Extends
                                    Instantiation : Instantiation
                                        Class : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Object'
                                Satisfied : Satisfies
                                    Types : TypeList[#1]
                                        [0] : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'List'
                                                Arguments : TypeArgumentList[#1]
                                                    [0] : Varianced
                                                        Type : TypePath[#1]
                                                            [0] : TypeReference
                                                                Name : Upper = 'Result'
                                Block : Block
                                    statements : StatementList[#5]
                                        [0] : TypedMethod
                                            Annotations : Annotations
                                                Items : AnnotationList[#2]
                                                    [0] : Annotation
                                                        Name : Lower = 'shared'
                                                    [1] : Annotation
                                                        Name : Lower = 'actual'
                                            Name : Lower = 'getFromFirst'
                                            Location = List.ceylon(842,31)
                                            Parameters : ParametersList[#1]
                                                [0] : Parameters[#1]
                                                    [0] : Declared
                                                        Annotations : Annotations
                                                        Declaration : TypedValue
                                                            Name : Lower = 'index'
                                                            Type : TypePath[#1]
                                                                [0] : TypeReference
                                                                    Name : Upper = 'Integer'
                                            Definition : Block
                                                statements : StatementList[#1]
                                                    [0] : If
                                                        Conditionals : Conditionals[#1]
                                                            [0] : ConditionalBlock
                                                                Conditions : Conditions[#1]
                                                                    [0] : SmallerBounds
                                                                        Left : NaturalNumber
                                                                        Op1 = <=
                                                                        Mid : MemberReference
                                                                            Name : Lower = 'index'
                                                                        Op2 = <
                                                                        Right : MemberReference
                                                                            Name : Lower = 'size'
                                                                Block : Block
                                                                    statements : StatementList[#1]
                                                                        [0] : If
                                                                            Conditionals : Conditionals[#1]
                                                                                [0] : ConditionalBlock
                                                                                    Conditions : Conditions[#1]
                                                                                        [0] : Exists
                                                                                            not = False
                                                                                            expression : LetVariable
                                                                                                Pattern : Variable
                                                                                                    Name : Lower = 'element'
                                                                                                Specifier : Value
                                                                                                    Op = =
                                                                                                    Expr : Call
                                                                                                        Expr : Infix
                                                                                                            Op = .
                                                                                                            Left : SelfReference
                                                                                                                Reference = outer
                                                                                                            Right : MemberReference
                                                                                                                Name : Lower = 'getFromFirst'
                                                                                                        Arguments : Positional
                                                                                                            Sequenced : ArgumentList[#1]
                                                                                                                [0] : MemberReference
                                                                                                                    Name : Lower = 'index'
                                                                                    Block : Block
                                                                                        statements : StatementList[#1]
                                                                                            [0] : Return
                                                                                                Expr : Call
                                                                                                    Expr : MemberReference
                                                                                                        Name : Lower = 'mapping'
                                                                                                    Arguments : Positional
                                                                                                        Sequenced : ArgumentList[#2]
                                                                                                            [0] : MemberReference
                                                                                                                Name : Lower = 'index'
                                                                                                            [1] : MemberReference
                                                                                                                Name : Lower = 'element'
                                                                            ElseBlock : Block
                                                                                statements : StatementList[#2]
                                                                                    [0] : Assertion
                                                                                        Conditions : Conditions[#1]
                                                                                            [0] : Is
                                                                                                not = False
                                                                                                type : TypePath[#1]
                                                                                                    [0] : TypeReference
                                                                                                        Name : Upper = 'Element'
                                                                                                variable : ConditionVariable
                                                                                                    Name : Lower = 'null'
                                                                                    [1] : Return
                                                                                        Expr : Call
                                                                                            Expr : MemberReference
                                                                                                Name : Lower = 'mapping'
                                                                                            Arguments : Positional
                                                                                                Sequenced : ArgumentList[#2]
                                                                                                    [0] : MemberReference
                                                                                                        Name : Lower = 'index'
                                                                                                    [1] : MemberReference
                                                                                                        Name : Lower = 'null'
                                                        ElseBlock : Block
                                                            statements : StatementList[#1]
                                                                [0] : Return
                                                                    Expr : MemberReference
                                                                        Name : Lower = 'null'
                                            Type : Nullable
                                                Left : TypePath[#1]
                                                    [0] : TypeReference
                                                        Name : Upper = 'Result'
                                        [1] : Specification
                                            Primary : Call
                                                Expr : MemberReference
                                                    Name : Lower = 'iterator'
                                                Arguments : Positional
                                            Value : Function
                                                Op = =>
                                                Expr : Let
                                                    Lets : LetVariableList[#1]
                                                        [0] : LetVariable
                                                            Pattern : Variable
                                                                Name : Lower = 'it'
                                                            Specifier : Value
                                                                Op = =
                                                                Expr : Call
                                                                    Expr : Infix
                                                                        Op = .
                                                                        Left : SelfReference
                                                                            Reference = outer
                                                                        Right : MemberReference
                                                                            Name : Lower = 'iterator'
                                                                    Arguments : Positional
                                                    Expr : Object
                                                        Satisfied : Satisfies
                                                            Types : TypeList[#1]
                                                                [0] : TypePath[#1]
                                                                    [0] : TypeReference
                                                                        Name : Upper = 'Iterator'
                                                                        Arguments : TypeArgumentList[#1]
                                                                            [0] : Varianced
                                                                                Type : TypePath[#1]
                                                                                    [0] : TypeReference
                                                                                        Name : Upper = 'Result'
                                                        Block : Block
                                                            statements : StatementList[#2]
                                                                [0] : InferredAttribute
                                                                    Annotations : Annotations
                                                                        Items : AnnotationList[#1]
                                                                            [0] : Annotation
                                                                                Name : Lower = 'variable'
                                                                    Name : Lower = 'index'
                                                                    Location = List.ceylon(861,36)
                                                                    Definition : Value
                                                                        Op = =
                                                                        Expr : NaturalNumber
                                                                [1] : Specification
                                                                    Primary : Call
                                                                        Expr : MemberReference
                                                                            Name : Lower = 'next'
                                                                        Arguments : Positional
                                                                    Value : Function
                                                                        Op = =>
                                                                        Expr : If
                                                                            Conditions : Conditions[#1]
                                                                                [0] : Is
                                                                                    not = True
                                                                                    type : TypePath[#1]
                                                                                        [0] : TypeReference
                                                                                            Name : Upper = 'Finished'
                                                                                    variable : ConditionVariable
                                                                                        Name : Lower = 'element'
                                                                                        Value : Value
                                                                                            Op = =
                                                                                            Expr : Call
                                                                                                Expr : Infix
                                                                                                    Op = .
                                                                                                    Left : MemberReference
                                                                                                        Name : Lower = 'it'
                                                                                                    Right : MemberReference
                                                                                                        Name : Lower = 'next'
                                                                                                Arguments : Positional
                                                                            Then : Prefix
                                                                                Op = then
                                                                                Right : Call
                                                                                    Expr : MemberReference
                                                                                        Name : Lower = 'mapping'
                                                                                    Arguments : Positional
                                                                                        Sequenced : ArgumentList[#2]
                                                                                            [0] : PostfixIncDec
                                                                                                Left : MemberReference
                                                                                                    Name : Lower = 'index'
                                                                                                Op = ++
                                                                                            [1] : MemberReference
                                                                                                Name : Lower = 'element'
                                                                            Else : Prefix
                                                                                Op = else
                                                                                Right : MemberReference
                                                                                    Name : Lower = 'finished'
                                        [2] : Specification
                                            Primary : MemberReference
                                                Name : Lower = 'lastIndex'
                                            Value : Function
                                                Op = =>
                                                Expr : Infix
                                                    Op = .
                                                    Left : SelfReference
                                                        Reference = outer
                                                    Right : MemberReference
                                                        Name : Lower = 'lastIndex'
                                        [3] : Specification
                                            Primary : MemberReference
                                                Name : Lower = 'size'
                                            Value : Function
                                                Op = =>
                                                Expr : Infix
                                                    Op = .
                                                    Left : SelfReference
                                                        Reference = outer
                                                    Right : MemberReference
                                                        Name : Lower = 'size'
                                        [4] : Specification
                                            Primary : Call
                                                Expr : MemberReference
                                                    Name : Lower = 'clone'
                                                Arguments : Positional
                                            Value : Function
                                                Op = =>
                                                Expr : Call
                                                    Expr : Infix
                                                        Op = .
                                                        Left : Call
                                                            Expr : Infix
                                                                Op = .
                                                                Left : SelfReference
                                                                    Reference = outer
                                                                Right : MemberReference
                                                                    Name : Lower = 'clone'
                                                            Arguments : Positional
                                                        Right : MemberReference
                                                            Name : Lower = 'mapElements'
                                                    Arguments : Positional
                                                        Sequenced : ArgumentList[#1]
                                                            [0] : MemberReference
                                                                Name : Lower = 'mapping'
                        Type : TypePath[#1]
                            [0] : TypeReference
                                Name : Upper = 'List'
                                Arguments : TypeArgumentList[#1]
                                    [0] : Varianced
                                        Type : TypePath[#1]
                                            [0] : TypeReference
                                                Name : Upper = 'Result'
