CXStart
    CCodeUnit
        CNamespace
            CAnnotations
                ROptional<ICStringLiteral>
                RStar<CAnnotation>
            RLiteral{'namespace'}
            CNamespacePath
                CIdentifier{'six'}
                CIdentifier{'core'}
            RLiteral{';'}
        CImports
        CTopDeclarations
            CClassDeclaration
                CAnnotations
                    ROptional<ICStringLiteral>
                        CVerbatimString{'\"\"\"\r\nA fixed-sized array of mutable elements. An _empty_ array is an array of [[size]] `0`. An array may be created with a\r\nlist of initial elements, or, via the constructor [[ofSize]], with a size and single initial value for all elements.\r\n\r\n    value array = Array { \"hello\", \"world\" };\r\n    value ints = Array.ofSize(1k, 0);\r\n\r\nArrays are mutable. Any element of an array may be set to a new value.\r\n\r\n    value array = Array { \"hello\", \"world\" };\r\n    array[0] = \"goodbye\";\r\n\r\nArrays are lists and support all operations inherited from [[List]], along with certain additional operations for\r\nefficient mutation of the array: [[set]], [[swap]], [[move]], [[sortInPlace]], [[reverseInPlace]], and [[copyTo]].\r\n\r\nThis class is provided primarily to ease interoperation with Java, and for some performance-critical low-level \r\nprogramming tasks.\r\n\r\nOn the JVM, for \"primitive\" element types [[Integer]], [[Float]], [[Byte]], [[Character]], and [[Boolean]], `Array`\r\nis easily the most efficient sort of `List` in Ceylon. However, certain optimizations made by the compiler are\r\nimpossible if the `Array` is assigned to a more generic type such as [[Iterable]]. Peak efficiency is obtained for \r\nalgorithms coded to the static type `Array`.\r\n\r\nFurthermore, `Array` is itself a compromise between raw performance, polymorphism, and portability. An instance of the\r\nJava primitive array type `java.lang.LongArray` (written `long[]` in Java) exhibits superior micro-level performance\r\nto an `Array<Integer>`, but:\r\n\r\n- is not a `List`, and\r\n- is not available except when compiling for the JVM.\r\n\r\nFortunately, given a Java primitive array, it\'s easy to obtain an `Array` backed by the primitive array:\r\n\r\n    //unportable JVM-specific code \r\n    LongArray longArray = LongArray(size);\r\n    Array<Integer> array = longArray.integerArray;\r\n\"\"\"'}
                    RStar<CAnnotation>
                        CAnnotation
                            CLowerIdentifier{'tagged'}
                            ROptional<ICArguments>
                                CPositionalArguments
                                    RLiteral{'('}
                                    ROptional<CSequencedArgumentList>
                                        CSequencedArgumentList
                                            CLiteralString{'\"Collections\"'}
                                    RLiteral{')'}
                        CAnnotation
                            CLowerIdentifier{'shared'}
                            ROptional<ICArguments>
                        CAnnotation
                            CLowerIdentifier{'final'}
                            ROptional<ICArguments>
                        CAnnotation
                            CLowerIdentifier{'serializable'}
                            ROptional<ICArguments>
                        CAnnotation
                            CLowerIdentifier{'native'}
                            ROptional<ICArguments>
                RLiteral{'class'}
                CUpperIdentifier{'Array'}
                ROptional<CTypeParameters>
                    CTypeParameters
                        RLiteral{'<'}
                        CTypeParameterList
                            CTypeParameter
                                ROptional<ICVariance>
                                CUpperIdentifier{'Element'}
                                ROptional<CTypeDefault>
                        RLiteral{'>'}
                ROptional<CParameters>
                ROptional<CCaseTypes>
                ROptional<CExtendedType>
                ROptional<CSatisfiedTypes>
                    CSatisfiedTypes
                        RLiteral{'satisfies'}
                        CUnionTypeList
                            CIntersectionTypeCore
                                CIntersectionTypeCore
                                    CTypePath
                                        CTypeReference
                                            CUpperIdentifier{'SearchableList'}
                                            ROptional<CTypeArguments>
                                                CTypeArguments
                                                    RLiteral{'<'}
                                                    ROptional<CTypeArgumentList>
                                                        CTypeArgumentList
                                                            CVariancedType
                                                                ROptional<ICVariance>
                                                                CTypePath
                                                                    CTypeReference
                                                                        CUpperIdentifier{'Element'}
                                                                        ROptional<CTypeArguments>
                                                    RLiteral{'>'}
                                    CIntersectionOperator{'&'}
                                    CTypePath
                                        CTypeReference
                                            CUpperIdentifier{'Ranged'}
                                            ROptional<CTypeArguments>
                                                CTypeArguments
                                                    RLiteral{'<'}
                                                    ROptional<CTypeArgumentList>
                                                        CTypeArgumentList
                                                            CVariancedType
                                                                ROptional<ICVariance>
                                                                CTypePath
                                                                    CTypeReference
                                                                        CUpperIdentifier{'Integer'}
                                                                        ROptional<CTypeArguments>
                                                            CVariancedType
                                                                ROptional<ICVariance>
                                                                CTypePath
                                                                    CTypeReference
                                                                        CUpperIdentifier{'Element'}
                                                                        ROptional<CTypeArguments>
                                                            CVariancedType
                                                                ROptional<ICVariance>
                                                                CTypePath
                                                                    CTypeReference
                                                                        CUpperIdentifier{'Array'}
                                                                        ROptional<CTypeArguments>
                                                                            CTypeArguments
                                                                                RLiteral{'<'}
                                                                                ROptional<CTypeArgumentList>
                                                                                    CTypeArgumentList
                                                                                        CVariancedType
                                                                                            ROptional<ICVariance>
                                                                                            CTypePath
                                                                                                CTypeReference
                                                                                                    CUpperIdentifier{'Element'}
                                                                                                    ROptional<CTypeArguments>
                                                                                RLiteral{'>'}
                                                    RLiteral{'>'}
                                CIntersectionOperator{'&'}
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'IndexedCorrespondenceMutator'}
                                        ROptional<CTypeArguments>
                                            CTypeArguments
                                                RLiteral{'<'}
                                                ROptional<CTypeArgumentList>
                                                    CTypeArgumentList
                                                        CVariancedType
                                                            ROptional<ICVariance>
                                                            CTypePath
                                                                CTypeReference
                                                                    CUpperIdentifier{'Element'}
                                                                    ROptional<CTypeArguments>
                                                RLiteral{'>'}
                ROptional<CTypeConstraints>
                CBlock
                    RLiteral{'{'}
                    CImports
                    CStatements
                        CConstructorDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Create an array with the given [[elements]].\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            RLiteral{'new'}
                            ROptional<ICMemberName>
                            CParameters
                                RLiteral{'('}
                                ROptional<CParameterList>
                                    CParameterList
                                        CParameter
                                            CAnnotations
                                                ROptional<ICStringLiteral>
                                                RStar<CAnnotation>
                                            CTypedValueParameter
                                                CIterableType
                                                    RLiteral{'{'}
                                                    ROptional<ICVariadicType>
                                                        CVariadicTypeCore
                                                            CTypePath
                                                                CTypeReference
                                                                    CUpperIdentifier{'Element'}
                                                                    ROptional<CTypeArguments>
                                                            CVariadicOperator{'*'}
                                                    RLiteral{'}'}
                                                CLowerIdentifier{'elements'}
                                                ROptional<CValueSpecifier>
                                RLiteral{')'}
                            ROptional<CDelegatedConstructor>
                            CBlock
                                RLiteral{'{'}
                                CImports
                                CStatements
                                RLiteral{'}'}
                        CConstructorDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Create an array of the specified [[size]], populating every index with the given [[element]]. The specified `size`\r\n    must be no larger than [[runtime.maxArraySize]]. If `size<=0`, the new array will have no elements.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'throws'}
                                        ROptional<ICArguments>
                                            CPositionalArguments
                                                RLiteral{'('}
                                                ROptional<CSequencedArgumentList>
                                                    CSequencedArgumentList
                                                        CClassLiteral
                                                            RLiteral{'class'}
                                                            CReferencePath
                                                                ROptional<CPackageQualifier>
                                                                CReferencePathElementList
                                                                    CIdentifier{'AssertionError'}
                                                        CLiteralString{'\"if `size > runtime.maxArraySize`\"'}
                                                RLiteral{')'}
                                    CAnnotation
                                        CLowerIdentifier{'see'}
                                        ROptional<ICArguments>
                                            CPositionalArguments
                                                RLiteral{'('}
                                                ROptional<CSequencedArgumentList>
                                                    CSequencedArgumentList
                                                        CValueLiteral
                                                            CKwValue{'value'}
                                                            CReferencePath
                                                                ROptional<CPackageQualifier>
                                                                CReferencePathElementList
                                                                    CIdentifier{'runtime'}
                                                                    CIdentifier{'maxArraySize'}
                                                RLiteral{')'}
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            RLiteral{'new'}
                            ROptional<ICMemberName>
                                CLowerIdentifier{'ofSize'}
                            CParameters
                                RLiteral{'('}
                                ROptional<CParameterList>
                                    CParameterList
                                        CParameter
                                            CAnnotations
                                                ROptional<ICStringLiteral>
                                                    CLiteralString{'\"The size of the resulting array. If the size is non-positive, an empty array will be created.\"'}
                                                RStar<CAnnotation>
                                            CTypedValueParameter
                                                CTypePath
                                                    CTypeReference
                                                        CUpperIdentifier{'Integer'}
                                                        ROptional<CTypeArguments>
                                                CLowerIdentifier{'size'}
                                                ROptional<CValueSpecifier>
                                        CParameter
                                            CAnnotations
                                                ROptional<ICStringLiteral>
                                                    CLiteralString{'\"The element value with which to populate the array. All elements of the resulting array will have the same value.\"'}
                                                RStar<CAnnotation>
                                            CTypedValueParameter
                                                CTypePath
                                                    CTypeReference
                                                        CUpperIdentifier{'Element'}
                                                        ROptional<CTypeArguments>
                                                CLowerIdentifier{'element'}
                                                ROptional<CValueSpecifier>
                                RLiteral{')'}
                            ROptional<CDelegatedConstructor>
                            CBlock
                                RLiteral{'{'}
                                CImports
                                CStatements
                                    CUnclosedStatement
                                        CAssertionStatement
                                            ROptional<ICAssertionMessage>
                                            RLiteral{'assert'}
                                            CConditions
                                                RLiteral{'('}
                                                ROptional<CConditionList>
                                                    CConditionList
                                                        CSmallerExpr
                                                            CMemberReference
                                                                CLowerIdentifier{'size'}
                                                                ROptional<CTypeArguments>
                                                            CSmallerOperator{'<'}
                                                            CSelectionExpr
                                                                CMemberReference
                                                                    CLowerIdentifier{'runtime'}
                                                                    ROptional<CTypeArguments>
                                                                CMemberSelectionOperator{'.'}
                                                                CMemberReference
                                                                    CLowerIdentifier{'maxArraySize'}
                                                                    ROptional<CTypeArguments>
                                                RLiteral{')'}
                                        RLiteral{';'}
                                RLiteral{'}'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Get the element at the specified index, where the array is indexed from the _end_ of the array, or `null` if the index\r\n     falls outside the bounds of this array.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Element'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'getFromLast'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'index'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Get the element at the specified index, or `null` if the index falls outside the bounds of this array.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Element'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'getFromFirst'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'index'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedAttributeDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Integer'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'lastIndex'}
                            COptionalAnySpecifier
                                ROptional<ICAnySpecifier>
                                RLiteral{';'}
                        CTypedAttributeDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Element'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'first'}
                            COptionalAnySpecifier
                                ROptional<ICAnySpecifier>
                                RLiteral{';'}
                        CTypedAttributeDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Element'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'last'}
                            COptionalAnySpecifier
                                ROptional<ICAnySpecifier>
                                RLiteral{';'}
                        CTypedAttributeDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"The immutable number of elements of this array.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'aliased'}
                                        ROptional<ICArguments>
                                            CPositionalArguments
                                                RLiteral{'('}
                                                ROptional<CSequencedArgumentList>
                                                    CSequencedArgumentList
                                                        CLiteralString{'\"length\"'}
                                                RLiteral{')'}
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Integer'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'size'}
                            COptionalAnySpecifier
                                ROptional<ICAnySpecifier>
                                RLiteral{';'}
                        CTypedAttributeDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Boolean'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'empty'}
                            COptionalAnySpecifier
                                ROptional<ICAnySpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Boolean'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'defines'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'index'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Iterator'}
                                    ROptional<CTypeArguments>
                                        CTypeArguments
                                            RLiteral{'<'}
                                            ROptional<CTypeArgumentList>
                                                CTypeArgumentList
                                                    CVariancedType
                                                        ROptional<ICVariance>
                                                        CTypePath
                                                            CTypeReference
                                                                CUpperIdentifier{'Element'}
                                                                ROptional<CTypeArguments>
                                            RLiteral{'>'}
                            CLowerIdentifier{'iterator'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Boolean'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'contains'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Object'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'element'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CUnionTypeCore
                                CTupleType
                                    RLiteral{'['}
                                    ROptional<ICTypeTypeArguments>
                                        CDefaultedTypeList
                                            CVariadicTypeCore
                                                CTypePath
                                                    CTypeReference
                                                        CUpperIdentifier{'Element'}
                                                        ROptional<CTypeArguments>
                                                CVariadicOperator{'+'}
                                    RLiteral{']'}
                                RLiteral{'|'}
                                CTupleType
                                    RLiteral{'['}
                                    ROptional<ICTypeTypeArguments>
                                    RLiteral{']'}
                            CLowerIdentifier{'sequence'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedAttributeDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CIterableType
                                RLiteral{'{'}
                                ROptional<ICVariadicType>
                                    CVariadicTypeCore
                                        CIntersectionTypeCore
                                            CTypePath
                                                CTypeReference
                                                    CUpperIdentifier{'Element'}
                                                    ROptional<CTypeArguments>
                                            CIntersectionOperator{'&'}
                                            CTypePath
                                                CTypeReference
                                                    CUpperIdentifier{'Object'}
                                                    ROptional<CTypeArguments>
                                        CVariadicOperator{'*'}
                                RLiteral{'}'}
                            CLowerIdentifier{'coalesced'}
                            COptionalAnySpecifier
                                ROptional<ICAnySpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"A new array with the same elements as this array.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Array'}
                                    ROptional<CTypeArguments>
                                        CTypeArguments
                                            RLiteral{'<'}
                                            ROptional<CTypeArgumentList>
                                                CTypeArgumentList
                                                    CVariancedType
                                                        ROptional<ICVariance>
                                                        CTypePath
                                                            CTypeReference
                                                                CUpperIdentifier{'Element'}
                                                                ROptional<CTypeArguments>
                                            RLiteral{'>'}
                            CLowerIdentifier{'clone'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CVoidMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Replace the existing element at the specified [[index]] with the given [[element]].\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'throws'}
                                        ROptional<ICArguments>
                                            CPositionalArguments
                                                RLiteral{'('}
                                                ROptional<CSequencedArgumentList>
                                                    CSequencedArgumentList
                                                        CClassLiteral
                                                            RLiteral{'class'}
                                                            CReferencePath
                                                                ROptional<CPackageQualifier>
                                                                CReferencePathElementList
                                                                    CIdentifier{'AssertionError'}
                                                        CLiteralString{'\"if the given index is out of bounds, that is, if `index < 0` or if `index > lastIndex`\"'}
                                                RLiteral{')'}
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CKwVoid{'void'}
                            CLowerIdentifier{'set'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The index of the element to replace.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'index'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The new element.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Element'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'element'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CVoidMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Efficiently copy the elements in the measure `sourcePosition:length` of this array to the measure\r\n     `destinationPosition:length` of the given [[array|destination]], which may be this array.\r\n     \r\n     The given [[sourcePosition]] and [[destinationPosition]] must be non-negative and, together with the given [[length]],\r\n     must identify meaningful ranges within the two arrays, satisfying:\r\n     \r\n     - `size >= sourcePosition+length`, and \r\n     - `destination.size >= destinationPosition+length`.\r\n     \r\n     If the given `length` is not strictly positive, noelements are copied.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'throws'}
                                        ROptional<ICArguments>
                                            CPositionalArguments
                                                RLiteral{'('}
                                                ROptional<CSequencedArgumentList>
                                                    CSequencedArgumentList
                                                        CClassLiteral
                                                            RLiteral{'class'}
                                                            CReferencePath
                                                                ROptional<CPackageQualifier>
                                                                CReferencePathElementList
                                                                    CIdentifier{'AssertionError'}
                                                        CLiteralString{'\"if the arguments do not identify meaningful ranges within the two arrays:\r\n         \r\n         - if the given [[sourcePosition]] or [[destinationPosition]] is negative, \r\n         - if `size < sourcePosition+length`, or \r\n         - if `destination.size < destinationPosition+length`.\"'}
                                                RLiteral{')'}
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CKwVoid{'void'}
                            CLowerIdentifier{'copyTo'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The array into which to copy the elements, which may be this array.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Array'}
                                                            ROptional<CTypeArguments>
                                                                CTypeArguments
                                                                    RLiteral{'<'}
                                                                    ROptional<CTypeArgumentList>
                                                                        CTypeArgumentList
                                                                            CVariancedType
                                                                                ROptional<ICVariance>
                                                                                    CVariance{'in'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                    RLiteral{'>'}
                                                    CLowerIdentifier{'destination'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The index of the first element in this array to copy.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'sourcePosition'}
                                                    ROptional<CValueSpecifier>
                                                        CValueSpecifier
                                                            RLiteral{'='}
                                                            CLiteralNatural{'0'}
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The index in the given array into which to copy the first element.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'destinationPosition'}
                                                    ROptional<CValueSpecifier>
                                                        CValueSpecifier
                                                            RLiteral{'='}
                                                            CLiteralNatural{'0'}
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The number of elements to copy.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'length'}
                                                    ROptional<CValueSpecifier>
                                                        CValueSpecifier
                                                            RLiteral{'='}
                                                            CCallExpr
                                                                CMemberReference
                                                                    CLowerIdentifier{'smallest'}
                                                                    ROptional<CTypeArguments>
                                                                CPositionalArguments
                                                                    RLiteral{'('}
                                                                    ROptional<CSequencedArgumentList>
                                                                        CSequencedArgumentList
                                                                            CAdditiveExpr
                                                                                CMemberReference
                                                                                    CLowerIdentifier{'size'}
                                                                                    ROptional<CTypeArguments>
                                                                                CAdditiveOperator{'-'}
                                                                                CMemberReference
                                                                                    CLowerIdentifier{'sourcePosition'}
                                                                                    ROptional<CTypeArguments>
                                                                            CAdditiveExpr
                                                                                CSelectionExpr
                                                                                    CMemberReference
                                                                                        CLowerIdentifier{'destination'}
                                                                                        ROptional<CTypeArguments>
                                                                                    CMemberSelectionOperator{'.'}
                                                                                    CMemberReference
                                                                                        CLowerIdentifier{'size'}
                                                                                        ROptional<CTypeArguments>
                                                                                CAdditiveOperator{'-'}
                                                                                CMemberReference
                                                                                    CLowerIdentifier{'destinationPosition'}
                                                                                    ROptional<CTypeArguments>
                                                                    RLiteral{')'}
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Array'}
                                    ROptional<CTypeArguments>
                                        CTypeArguments
                                            RLiteral{'<'}
                                            ROptional<CTypeArgumentList>
                                                CTypeArgumentList
                                                    CVariancedType
                                                        ROptional<ICVariance>
                                                        CTypePath
                                                            CTypeReference
                                                                CUpperIdentifier{'Element'}
                                                                ROptional<CTypeArguments>
                                            RLiteral{'>'}
                            CLowerIdentifier{'span'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'from'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'to'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Array'}
                                    ROptional<CTypeArguments>
                                        CTypeArguments
                                            RLiteral{'<'}
                                            ROptional<CTypeArgumentList>
                                                CTypeArgumentList
                                                    CVariancedType
                                                        ROptional<ICVariance>
                                                        CTypePath
                                                            CTypeReference
                                                                CUpperIdentifier{'Element'}
                                                                ROptional<CTypeArguments>
                                            RLiteral{'>'}
                            CLowerIdentifier{'spanFrom'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'from'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Array'}
                                    ROptional<CTypeArguments>
                                        CTypeArguments
                                            RLiteral{'<'}
                                            ROptional<CTypeArgumentList>
                                                CTypeArgumentList
                                                    CVariancedType
                                                        ROptional<ICVariance>
                                                        CTypePath
                                                            CTypeReference
                                                                CUpperIdentifier{'Element'}
                                                                ROptional<CTypeArguments>
                                            RLiteral{'>'}
                            CLowerIdentifier{'spanTo'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'to'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Array'}
                                    ROptional<CTypeArguments>
                                        CTypeArguments
                                            RLiteral{'<'}
                                            ROptional<CTypeArgumentList>
                                                CTypeArgumentList
                                                    CVariancedType
                                                        ROptional<ICVariance>
                                                        CTypePath
                                                            CTypeReference
                                                                CUpperIdentifier{'Element'}
                                                                ROptional<CTypeArguments>
                                            RLiteral{'>'}
                            CLowerIdentifier{'measure'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'from'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'length'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CIterableType
                                RLiteral{'{'}
                                ROptional<ICVariadicType>
                                    CVariadicTypeCore
                                        CTypePath
                                            CTypeReference
                                                CUpperIdentifier{'Element'}
                                                ROptional<CTypeArguments>
                                        CVariadicOperator{'*'}
                                RLiteral{'}'}
                            CLowerIdentifier{'skip'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'skipping'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CIterableType
                                RLiteral{'{'}
                                ROptional<ICVariadicType>
                                    CVariadicTypeCore
                                        CTypePath
                                            CTypeReference
                                                CUpperIdentifier{'Element'}
                                                ROptional<CTypeArguments>
                                        CVariadicOperator{'*'}
                                RLiteral{'}'}
                            CLowerIdentifier{'take'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'taking'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CIterableType
                                RLiteral{'{'}
                                ROptional<ICVariadicType>
                                    CVariadicTypeCore
                                        CTypePath
                                            CTypeReference
                                                CUpperIdentifier{'Element'}
                                                ROptional<CTypeArguments>
                                        CVariadicOperator{'*'}
                                RLiteral{'}'}
                            CLowerIdentifier{'by'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'step'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Integer'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'count'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CVoidMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CKwVoid{'void'}
                            CLowerIdentifier{'each'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CVoidFunctionParameter
                                                    CKwVoid{'void'}
                                                    CLowerIdentifier{'step'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Boolean'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'any'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Boolean'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'every'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CIterableType
                                RLiteral{'{'}
                                ROptional<ICVariadicType>
                                    CVariadicTypeCore
                                        CTypePath
                                            CTypeReference
                                                CUpperIdentifier{'Element'}
                                                ROptional<CTypeArguments>
                                        CVariadicOperator{'*'}
                                RLiteral{'}'}
                            CLowerIdentifier{'filter'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Element'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'find'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CIntersectionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                                CIntersectionOperator{'&'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Object'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Element'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'findLast'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CIntersectionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                                CIntersectionOperator{'&'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Object'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Integer'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'firstIndexWhere'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CIntersectionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                                CIntersectionOperator{'&'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Object'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Integer'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'lastIndexWhere'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CIntersectionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                                CIntersectionOperator{'&'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Object'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CIterableType
                                RLiteral{'{'}
                                ROptional<ICVariadicType>
                                    CVariadicTypeCore
                                        CTypePath
                                            CTypeReference
                                                CUpperIdentifier{'Integer'}
                                                ROptional<CTypeArguments>
                                        CVariadicOperator{'*'}
                                RLiteral{'}'}
                            CLowerIdentifier{'indexesWhere'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CIntersectionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                                CIntersectionOperator{'&'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Object'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CGroupedType
                                    RLiteral{'<'}
                                    CEntryType
                                        CTypePath
                                            CTypeReference
                                                CUpperIdentifier{'Integer'}
                                                ROptional<CTypeArguments>
                                        CEntryOperator{'->'}
                                        CIntersectionTypeCore
                                            CTypePath
                                                CTypeReference
                                                    CUpperIdentifier{'Element'}
                                                    ROptional<CTypeArguments>
                                            CIntersectionOperator{'&'}
                                            CTypePath
                                                CTypeReference
                                                    CUpperIdentifier{'Object'}
                                                    ROptional<CTypeArguments>
                                    RLiteral{'>'}
                                RLiteral{'?'}
                            CLowerIdentifier{'locate'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CIntersectionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                                CIntersectionOperator{'&'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Object'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CGroupedType
                                    RLiteral{'<'}
                                    CEntryType
                                        CTypePath
                                            CTypeReference
                                                CUpperIdentifier{'Integer'}
                                                ROptional<CTypeArguments>
                                        CEntryOperator{'->'}
                                        CIntersectionTypeCore
                                            CTypePath
                                                CTypeReference
                                                    CUpperIdentifier{'Element'}
                                                    ROptional<CTypeArguments>
                                            CIntersectionOperator{'&'}
                                            CTypePath
                                                CTypeReference
                                                    CUpperIdentifier{'Object'}
                                                    ROptional<CTypeArguments>
                                    RLiteral{'>'}
                                RLiteral{'?'}
                            CLowerIdentifier{'locateLast'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CIntersectionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                                CIntersectionOperator{'&'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Object'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CIterableType
                                RLiteral{'{'}
                                ROptional<ICVariadicType>
                                    CVariadicTypeCore
                                        CGroupedType
                                            RLiteral{'<'}
                                            CEntryType
                                                CTypePath
                                                    CTypeReference
                                                        CUpperIdentifier{'Integer'}
                                                        ROptional<CTypeArguments>
                                                CEntryOperator{'->'}
                                                CIntersectionTypeCore
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Element'}
                                                            ROptional<CTypeArguments>
                                                    CIntersectionOperator{'&'}
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Object'}
                                                            ROptional<CTypeArguments>
                                            RLiteral{'>'}
                                        CVariadicOperator{'*'}
                                RLiteral{'}'}
                            CLowerIdentifier{'locations'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Boolean'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'selecting'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CIntersectionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                                CIntersectionOperator{'&'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Object'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CUnionTypeCore
                                CUnionTypeCore
                                    CTypePath
                                        CTypeReference
                                            CUpperIdentifier{'Result'}
                                            ROptional<CTypeArguments>
                                    RLiteral{'|'}
                                    CTypePath
                                        CTypeReference
                                            CUpperIdentifier{'Element'}
                                            ROptional<CTypeArguments>
                                RLiteral{'|'}
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Null'}
                                        ROptional<CTypeArguments>
                            CLowerIdentifier{'reduce'}
                            ROptional<CTypeParameters>
                                CTypeParameters
                                    RLiteral{'<'}
                                    CTypeParameterList
                                        CTypeParameter
                                            ROptional<ICVariance>
                                            CUpperIdentifier{'Result'}
                                            ROptional<CTypeDefault>
                                    RLiteral{'>'}
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Result'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'accumulating'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CUnionTypeCore
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Result'}
                                                                                        ROptional<CTypeArguments>
                                                                                RLiteral{'|'}
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'partial'}
                                                                            ROptional<CValueSpecifier>
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'element'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Boolean'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'occursAt'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'index'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Element'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'element'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Integer'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'firstOccurrence'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Element'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'element'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'from'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'length'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CNullableType
                                CTypePath
                                    CTypeReference
                                        CUpperIdentifier{'Integer'}
                                        ROptional<CTypeArguments>
                                RLiteral{'?'}
                            CLowerIdentifier{'lastOccurrence'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Element'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'element'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'from'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'length'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CTypePath
                                CTypeReference
                                    CUpperIdentifier{'Boolean'}
                                    ROptional<CTypeArguments>
                            CLowerIdentifier{'occurs'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Element'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'element'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'from'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'length'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CIterableType
                                RLiteral{'{'}
                                ROptional<ICVariadicType>
                                    CVariadicTypeCore
                                        CTypePath
                                            CTypeReference
                                                CUpperIdentifier{'Integer'}
                                                ROptional<CTypeArguments>
                                        CVariadicOperator{'*'}
                                RLiteral{'}'}
                            CLowerIdentifier{'occurrences'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Element'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'element'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'from'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'length'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CVoidMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Given two indices within this array, efficiently swap the positions of the elements at these indices. If the two given\r\n     indices are identical, no change is made to the array. The array always contains the same elements before and after\r\n     this operation.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'throws'}
                                        ROptional<ICArguments>
                                            CPositionalArguments
                                                RLiteral{'('}
                                                ROptional<CSequencedArgumentList>
                                                    CSequencedArgumentList
                                                        CClassLiteral
                                                            RLiteral{'class'}
                                                            CReferencePath
                                                                ROptional<CPackageQualifier>
                                                                CReferencePathElementList
                                                                    CIdentifier{'AssertionError'}
                                                        CLiteralString{'\"if either of the given indices is out of bounds\"'}
                                                RLiteral{')'}
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CKwVoid{'void'}
                            CLowerIdentifier{'swap'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The index of the first element.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'i'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The index of the second element.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'j'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CVoidMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Efficiently move the element of this array at the given [[source index|from]] to the given [[destination index|to]],\r\n     shifting every element falling between the two given indices by one position to accommodate the change of position. If\r\n     the source index is larger than the destination index, elements are shifted toward the end of the array. If the source\r\n     index is smaller than the destination index, elements are shifted toward the start of the array. If the given indices\r\n     are identical, no change is made to the array. The array always contains the same elements before and after this operation.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'throws'}
                                        ROptional<ICArguments>
                                            CPositionalArguments
                                                RLiteral{'('}
                                                ROptional<CSequencedArgumentList>
                                                    CSequencedArgumentList
                                                        CClassLiteral
                                                            RLiteral{'class'}
                                                            CReferencePath
                                                                ROptional<CPackageQualifier>
                                                                CReferencePathElementList
                                                                    CIdentifier{'AssertionError'}
                                                        CLiteralString{'\"if either of the given indices is out of bounds\"'}
                                                RLiteral{')'}
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CKwVoid{'void'}
                            CLowerIdentifier{'move'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The source index of the element to move.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'from'}
                                                    ROptional<CValueSpecifier>
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"The destination index to which the element is moved.\"'}
                                                    RStar<CAnnotation>
                                                CTypedValueParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Integer'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'to'}
                                                    ROptional<CValueSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CVoidMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Reverses the order of the current elements in this array. This operation works by side-effect, modifying the array.\r\n     The array always contains the same elements before and after this operation.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CKwVoid{'void'}
                            CLowerIdentifier{'reverseInPlace'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CVoidMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Sorts the elements in this array according to the order induced by the given [[comparison function|comparing]]. This\r\n     operation works by side-effect, modifying the array.  The array always contains the same elements before and after\r\n     this operation.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CKwVoid{'void'}
                            CLowerIdentifier{'sortInPlace'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"A comparison function that compares pairs of elements of this array.\"'}
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Comparison'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'comparing'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'x'}
                                                                            ROptional<CValueSpecifier>
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'y'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CTypedMethodDeclaration
                            CAnnotations
                                ROptional<ICStringLiteral>
                                    CLiteralString{'\"Sorts the elements in this array according to the order induced by the given [[comparison function|comparing]],\r\n     returning a new sequence. This operation has no side-effect, and does not modify the array.\"'}
                                RStar<CAnnotation>
                                    CAnnotation
                                        CLowerIdentifier{'shared'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'actual'}
                                        ROptional<ICArguments>
                                    CAnnotation
                                        CLowerIdentifier{'native'}
                                        ROptional<ICArguments>
                            CUnionTypeCore
                                CTupleType
                                    RLiteral{'['}
                                    ROptional<ICTypeTypeArguments>
                                        CDefaultedTypeList
                                            CVariadicTypeCore
                                                CTypePath
                                                    CTypeReference
                                                        CUpperIdentifier{'Element'}
                                                        ROptional<CTypeArguments>
                                                CVariadicOperator{'+'}
                                    RLiteral{']'}
                                RLiteral{'|'}
                                CTupleType
                                    RLiteral{'['}
                                    ROptional<ICTypeTypeArguments>
                                    RLiteral{']'}
                            CLowerIdentifier{'sort'}
                            ROptional<CTypeParameters>
                            RPlus<CParameters>
                                CParameters
                                    RLiteral{'('}
                                    ROptional<CParameterList>
                                        CParameterList
                                            CParameter
                                                CAnnotations
                                                    ROptional<ICStringLiteral>
                                                        CLiteralString{'\"A comparison function that compares pairs ofelements of this array.\"'}
                                                    RStar<CAnnotation>
                                                CTypedFunctionParameter
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'Comparison'}
                                                            ROptional<CTypeArguments>
                                                    CLowerIdentifier{'comparing'}
                                                    ROptional<CTypeParameters>
                                                    RPlus<CParameters>
                                                        CParameters
                                                            RLiteral{'('}
                                                            ROptional<CParameterList>
                                                                CParameterList
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'x'}
                                                                            ROptional<CValueSpecifier>
                                                                    CParameter
                                                                        CAnnotations
                                                                            ROptional<ICStringLiteral>
                                                                            RStar<CAnnotation>
                                                                        CTypedValueParameter
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                            CLowerIdentifier{'y'}
                                                                            ROptional<CValueSpecifier>
                                                            RLiteral{')'}
                                                    ROptional<CFunctionSpecifier>
                                    RLiteral{')'}
                            ROptional<CTypeConstraints>
                            COptionalFunctionSpecifier
                                ROptional<CFunctionSpecifier>
                                RLiteral{';'}
                        CUnclosedStatement
                            CSpecificationStatement
                                CParametrizedMember
                                    CLowerIdentifier{'equals'}
                                    ROptional<CTypeParameters>
                                    RPlus<CParameters>
                                        CParameters
                                            RLiteral{'('}
                                            ROptional<CParameterList>
                                                CParameterList
                                                    CParameter
                                                        CAnnotations
                                                            ROptional<ICStringLiteral>
                                                            RStar<CAnnotation>
                                                        CTypedValueParameter
                                                            CTypePath
                                                                CTypeReference
                                                                    CUpperIdentifier{'Object'}
                                                                    ROptional<CTypeArguments>
                                                            CLowerIdentifier{'that'}
                                                            ROptional<CValueSpecifier>
                                            RLiteral{')'}
                                CFunctionSpecifier
                                    RLiteral{'=>'}
                                    CCallExpr
                                        CSelectionExpr
                                            CGroupedExpr
                                                RLiteral{'('}
                                                CTypecheckExpr
                                                    CSelfReference{'super'}
                                                    CTypeOperator{'of'}
                                                    CTypePath
                                                        CTypeReference
                                                            CUpperIdentifier{'List'}
                                                            ROptional<CTypeArguments>
                                                                CTypeArguments
                                                                    RLiteral{'<'}
                                                                    ROptional<CTypeArgumentList>
                                                                        CTypeArgumentList
                                                                            CVariancedType
                                                                                ROptional<ICVariance>
                                                                                CTypePath
                                                                                    CTypeReference
                                                                                        CUpperIdentifier{'Element'}
                                                                                        ROptional<CTypeArguments>
                                                                    RLiteral{'>'}
                                                RLiteral{')'}
                                            CMemberSelectionOperator{'.'}
                                            CMemberReference
                                                CLowerIdentifier{'equals'}
                                                ROptional<CTypeArguments>
                                        CPositionalArguments
                                            RLiteral{'('}
                                            ROptional<CSequencedArgumentList>
                                                CSequencedArgumentList
                                                    CMemberReference
                                                        CLowerIdentifier{'that'}
                                                        ROptional<CTypeArguments>
                                            RLiteral{')'}
                            RLiteral{';'}
                        CUnclosedStatement
                            CSpecificationStatement
                                CMemberReference
                                    CLowerIdentifier{'hash'}
                                    ROptional<CTypeArguments>
                                CFunctionSpecifier
                                    RLiteral{'=>'}
                                    CSelectionExpr
                                        CGroupedExpr
                                            RLiteral{'('}
                                            CTypecheckExpr
                                                CSelfReference{'super'}
                                                CTypeOperator{'of'}
                                                CTypePath
                                                    CTypeReference
                                                        CUpperIdentifier{'List'}
                                                        ROptional<CTypeArguments>
                                                            CTypeArguments
                                                                RLiteral{'<'}
                                                                ROptional<CTypeArgumentList>
                                                                    CTypeArgumentList
                                                                        CVariancedType
                                                                            ROptional<ICVariance>
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                RLiteral{'>'}
                                            RLiteral{')'}
                                        CMemberSelectionOperator{'.'}
                                        CMemberReference
                                            CLowerIdentifier{'hash'}
                                            ROptional<CTypeArguments>
                            RLiteral{';'}
                        CUnclosedStatement
                            CSpecificationStatement
                                CMemberReference
                                    CLowerIdentifier{'string'}
                                    ROptional<CTypeArguments>
                                CFunctionSpecifier
                                    RLiteral{'=>'}
                                    CSelectionExpr
                                        CGroupedExpr
                                            RLiteral{'('}
                                            CTypecheckExpr
                                                CSelfReference{'super'}
                                                CTypeOperator{'of'}
                                                CTypePath
                                                    CTypeReference
                                                        CUpperIdentifier{'Collection'}
                                                        ROptional<CTypeArguments>
                                                            CTypeArguments
                                                                RLiteral{'<'}
                                                                ROptional<CTypeArgumentList>
                                                                    CTypeArgumentList
                                                                        CVariancedType
                                                                            ROptional<ICVariance>
                                                                            CTypePath
                                                                                CTypeReference
                                                                                    CUpperIdentifier{'Element'}
                                                                                    ROptional<CTypeArguments>
                                                                RLiteral{'>'}
                                            RLiteral{')'}
                                        CMemberSelectionOperator{'.'}
                                        CMemberReference
                                            CLowerIdentifier{'string'}
                                            ROptional<CTypeArguments>
                            RLiteral{';'}
                    RLiteral{'}'}
    REof{'\r\n'}
