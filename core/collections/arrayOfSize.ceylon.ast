Top : Unit
    Namespace : Namespace
        Annotations : Annotations
        Names : Identifiers[#2]
            [0] : Any = 'six'
            [1] : Any = 'core'
    Declarations : Declarations[#1]
        [0] : TypedMethod
            Annotations : Annotations
                Doc : VerbatimString = '\r\nCreate an array of the specified [[size]], populating every index with the given [[element]]. The '…
                Items : AnnotationList[#5]
                    [0] : Annotation
                        Name : Lower = 'see'
                        Arguments : Positional
                            Sequenced : ArgumentList[#1]
                                [0] : Value
                                    Path : ReferencePath
                                        Package = False
                                        Names : Identifiers[#2]
                                            [0] : Any = 'runtime'
                                            [1] : Any = 'maxArraySize'
                    [1] : Annotation
                        Name : Lower = 'tagged'
                        Arguments : Positional
                            Sequenced : ArgumentList[#1]
                                [0] : StandardString = 'Collections'
                    [2] : Annotation
                        Name : Lower = 'throws'
                        Arguments : Positional
                            Sequenced : ArgumentList[#2]
                                [0] : Class
                                    Path : ReferencePath
                                        Package = False
                                        Names : Identifiers[#1]
                                            [0] : Any = 'AssertionError'
                                [1] : StandardString = 'if `size > runtime.maxArraySize`'
                    [3] : Annotation
                        Name : Lower = 'deprecated'
                        Arguments : Positional
                            Sequenced : ArgumentList[#1]
                                [0] : StandardString = 'Use [[Array.ofSize]]'
                    [4] : Annotation
                        Name : Lower = 'shared'
            Name : Lower = 'arrayOfSize'
            Location = arrayOfSize.ceylon(19,23)
            TypeParameters : TypeParameters[#1]
                [0] : TypeParameter
                    Name : Upper = 'Element'
            Parameters : ParametersList[#1]
                [0] : Parameters[#2]
                    [0] : Declared
                        Annotations : Annotations
                            Doc : StandardString = 'The size of the resulting array. If the size is non-positive, an empty array will be created.'
                        Declaration : TypedValue
                            Name : Lower = 'size'
                            Type : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Integer'
                    [1] : Declared
                        Annotations : Annotations
                            Doc : StandardString = 'The element value with which to populate the array. All elements of the resulting array will have th'…
                        Declaration : TypedValue
                            Name : Lower = 'element'
                            Type : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
            Definition : Function
                Op = =>
                Expr : Call
                    Expr : Infix
                        Op = .
                        Left : TypeReference
                            Name : Upper = 'Array'
                        Right : MemberReference
                            Name : Lower = 'ofSize'
                    Arguments : Positional
                        Sequenced : ArgumentList[#2]
                            [0] : MemberReference
                                Name : Lower = 'size'
                            [1] : MemberReference
                                Name : Lower = 'element'
            Type : TypePath[#1]
                [0] : TypeReference
                    Name : Upper = 'Array'
                    Arguments : TypeArgumentList[#1]
                        [0] : Varianced
                            Type : TypePath[#1]
                                [0] : TypeReference
                                    Name : Upper = 'Element'
