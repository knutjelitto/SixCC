namespace six.core;

using six.core.meta { ... }

shared let uint __data_start = 0u32;
shared let uint __heap_start = 0u32;
shared var uint __heap_current = 0u32;
shared var uint __next_object_id = 42u32;

shared Address alloc(uint size)
{
    let allocated = (__heap_current + 15u32) & #FFFFFFF0u32;
    __heap_current = allocated + size;
    return Address(allocated);
}

shared void classAlloc2(RTClass classDescriptor)
{
    let size = classDescriptor.Size;
    let obj = alloc(16u32 + size);
    return;
}

class RTClass
{
    var uint Name = 0;
    var uint Size = 0;
    var uint Dispatch = 0;
}

